0install:parsed=241 would_break=0
ANSITerminal:parsed=8 would_break=0
CamelCase:parsed=6 would_break=0
FPauth-core:parsed=31 would_break=0
FrontC:parsed=13 would_break=0
GuaCaml:parsed=145 would_break=0
ISO3166:parsed=4 would_break=0
ISO8601:parsed=7 would_break=0
MlFront_Cache:parsed=345 would_break=0
OCADml:parsed=65 would_break=0
OCanren-ppx:parsed=88 would_break=0
OSCADml:parsed=47 would_break=0
SZXX:parsed=16 would_break=0
Snowflake:parsed=16 would_break=0
SourceCode_ASCII:parsed=5 would_break=0
aacplus:parsed=4 would_break=0
abella:parsed=43 would_break=0
absolute:parsed=59 would_break=0
abstract_algebra:parsed=1 would_break=0
accessor:parsed=36 would_break=0
accessor_async:parsed=6 would_break=0
accessor_base:parsed=89 would_break=0
accessor_core:parsed=68 would_break=0
acgtk:parsed=142 would_break=0
aches:parsed=58 would_break=0
acp4:parsed=7 would_break=0
acpc:parsed=15 would_break=0
activitypub:parsed=45 would_break=0
adelfa:parsed=50 would_break=0
adobe_font_metrics:parsed=3 would_break=0
afl:parsed=0 would_break=0
afl-persistent:parsed=5 would_break=0
ago:parsed=1 would_break=0
agrid:parsed=3 would_break=0
ahrocksdb:parsed=17 would_break=0
aifad:parsed=48 would_break=0
alba:parsed=200 would_break=0
albatross:parsed=37 would_break=0
alcotest:parsed=96 would_break=0
alg_structs:parsed=29 would_break=0
algaeff:parsed=29 would_break=0
allegro5:parsed=2 would_break=0
alonzo:parsed=2 would_break=0
alsa:parsed=7 would_break=0
alt-ergo:parsed=204 would_break=0
altgr-ergo:parsed=195 would_break=0
ambient-context:parsed=17 would_break=0
amqp-client:parsed=54 would_break=0
anders:parsed=0 would_break=0
angstrom:parsed=25 would_break=0
ansi:parsed=13 would_break=0
ansi-parse:parsed=7 would_break=0
ansicolor:parsed=2 would_break=0
ansifmt:parsed=20 would_break=0
antic:parsed=9 would_break=0
anycache:parsed=15 would_break=0
ao:parsed=4 would_break=0
apron:parsed=19 would_break=0
apronext:parsed=23 would_break=0
archetype:parsed=48 would_break=0
archi:parsed=9 would_break=0
areas-and-adversaries:parsed=6 would_break=0
arg-complete:parsed=5 would_break=0
argon2:parsed=8 would_break=0
argsh:parsed=7 would_break=0
arp:parsed=9 would_break=0
arp-mirage:parsed=9 would_break=0
arrakis:parsed=50 would_break=0
arrayjit:parsed=65 would_break=0
art:parsed=38 would_break=0
asai:parsed=58 would_break=0
asak:parsed=20 would_break=0
ascii85:parsed=0 would_break=0
asetmap:parsed=4 would_break=0
asn1-combinators:parsed=16 would_break=0
assimp:parsed=2 would_break=0
ast_generic:parsed=1092 would_break=0
astring:parsed=19 would_break=0
async:parsed=133 would_break=0
async-uri:parsed=2 would_break=0
async_durable:parsed=9 would_break=0
async_extra:parsed=6 would_break=0
async_find:parsed=2 would_break=0
async_inotify:parsed=4 would_break=0
async_interactive:parsed=2 would_break=0
async_js:parsed=31 would_break=0
async_kernel:parsed=139 would_break=0
async_log:parsed=58 would_break=0
async_rpc_kernel:parsed=86 would_break=0
async_rpc_websocket:parsed=13 would_break=0
async_sendfile:parsed=4 would_break=0
async_shell:parsed=2 would_break=0
async_smtp:parsed=157 would_break=0
async_ssl:parsed=30 would_break=0
async_udp:parsed=5 would_break=0
async_unix:parsed=95 would_break=0
async_websocket:parsed=11 would_break=0
atable:parsed=2 would_break=0
atacama:parsed=14 would_break=0
atd:parsed=216 would_break=0
autofonce:parsed=47 would_break=0
avro:parsed=21 would_break=0
awa:parsed=23 would_break=0
awa-lwt:parsed=26 would_break=0
aws:parsed=1894 would_break=0
aws-config:parsed=4 would_break=0
aws-s3:parsed=34 would_break=0
azblob:parsed=4 would_break=0
azure-cosmos-db:parsed=15 would_break=0
b0:parsed=149 would_break=0
babel:parsed=26 would_break=0
baby:parsed=38 would_break=0
backoff:parsed=8 would_break=0
bag:parsed=3 would_break=0
baguette_sharp:parsed=17 would_break=0
bam:parsed=39 would_break=0
bap-emacs-dot:parsed=0 would_break=0
bap-emacs-mode:parsed=0 would_break=0
bap-signatures:parsed=0 would_break=0
bare_encoding:parsed=16 would_break=0
bark:parsed=3 would_break=0
base:parsed=447 would_break=0
base32:parsed=2 would_break=0
base58:parsed=4 would_break=0
base64:parsed=11 would_break=0
base_bigstring:parsed=5 would_break=0
base_quickcheck:parsed=72 would_break=0
base_trie:parsed=17 would_break=0
bastet:parsed=58 would_break=0
bastet_async:parsed=2 would_break=0
bastet_lwt:parsed=2 would_break=0
batch_jaro_winkler:parsed=4 would_break=0
batsat:parsed=11 would_break=0
batteries:build/myocamlbuild.ml:  (* ocamlfind command *)
batteries:build/myocamlbuild.ml:  let ocamlfind x = S[[31;1mA"[39;22mocamlfind"; x]
batteries:---
batteries:build/myocamlbuild.ml:    (* override default commands by ocamlfind ones *)
batteries:build/myocamlbuild.ml:    Options.ocamlc     := ocamlfind & [31;1mA"[39;22mocamlc";
batteries:build/myocamlbuild.ml:    Options.ocamlopt   := ocamlfind & [31;1mA"[39;22mocamlopt";
batteries:build/myocamlbuild.ml:    Options.ocamldep   := ocamlfind & [31;1mA"[39;22mocamldep";
batteries:build/myocamlbuild.ml:    Options.ocamldoc   := ocamlfind & [31;1mA"[39;22mocamldoc";
batteries:build/myocamlbuild.ml:    Options.ocamlmktop := ocamlfind & [31;1mA"[39;22mocamlmktop"
batteries:---
batteries:build/myocamlbuild.ml:       (* When one link an OCaml library/binary/package, one should use -linkpkg *)
batteries:build/myocamlbuild.ml:       flag ["ocaml"; "byte";   "link"; "program"] & [31;1mA"[39;22m-linkpkg";
batteries:build/myocamlbuild.ml:       flag ["ocaml"; "native"; "link"; "program"] & [31;1mA"[39;22m-linkpkg";
batteries:---
batteries:build/myocamlbuild.ml:       List.iter begin fun pkg ->
batteries:build/myocamlbuild.ml:         flag ["ocaml"; "compile";  "pkg_"^pkg] & S[[31;1mA"[39;22m-package"; A pkg];
batteries:build/myocamlbuild.ml:         flag ["ocaml"; "ocamldep"; "pkg_"^pkg] & S[[31;1mA"[39;22m-package"; A pkg];
batteries:build/myocamlbuild.ml:         flag ["ocaml"; "doc";      "pkg_"^pkg] & S[[31;1mA"[39;22m-package"; A pkg];
batteries:build/myocamlbuild.ml:         flag ["ocaml"; "link";     "pkg_"^pkg] & S[[31;1mA"[39;22m-package"; A pkg];
batteries:build/myocamlbuild.ml:	 flag ["ocaml"; "infer_interface"; "pkg_"^pkg] & S[[31;1mA"[39;22m-package"; A pkg];
batteries:build/myocamlbuild.ml:       end (find_packages ());
batteries:---
batteries:build/myocamlbuild.ml:       List.iter begin fun syntax ->
batteries:build/myocamlbuild.ml:         flag ["ocaml"; "compile";  "syntax_"^syntax] & S[[31;1mA"[39;22m-syntax"; A syntax];
batteries:build/myocamlbuild.ml:         flag ["ocaml"; "ocamldep"; "syntax_"^syntax] & S[[31;1mA"[39;22m-syntax"; A syntax];
batteries:build/myocamlbuild.ml:         flag ["ocaml"; "doc";      "syntax_"^syntax] & S[[31;1mA"[39;22m-syntax"; A syntax];
batteries:build/myocamlbuild.ml:         flag ["ocaml"; "infer_interface";  "syntax_"^syntax] & S[[31;1mA"[39;22m-syntax"; A syntax];
batteries:build/myocamlbuild.ml:       end (find_syntaxes ());
batteries:---
batteries:build/myocamlbuild.ml:    let cl_batteries =
batteries:build/myocamlbuild.ml:      S [A "-package"; A "batteries.syntax"; [31;1mA"[39;22m-syntax";  A "camlp4o"] in
batteries:---
batteries:examples/benchmark/myocamlbuild.ml:  (* ocamlfind command *)
batteries:examples/benchmark/myocamlbuild.ml:  let ocamlfind x = S[[31;1mA"[39;22mocamlfind"; x]
batteries:---
batteries:examples/benchmark/myocamlbuild.ml:    (* override default commands by ocamlfind ones *)
batteries:examples/benchmark/myocamlbuild.ml:    Options.ocamlc     := ocamlfind & [31;1mA"[39;22mocamlc";
batteries:examples/benchmark/myocamlbuild.ml:    Options.ocamlopt   := ocamlfind & [31;1mA"[39;22mocamlopt";
batteries:examples/benchmark/myocamlbuild.ml:    Options.ocamldep   := ocamlfind & [31;1mA"[39;22mocamldep";
batteries:examples/benchmark/myocamlbuild.ml:    Options.ocamldoc   := ocamlfind & [31;1mA"[39;22mocamldoc";
batteries:examples/benchmark/myocamlbuild.ml:    Options.ocamlmktop := ocamlfind & [31;1mA"[39;22mocamlmktop"
batteries:---
batteries:examples/benchmark/myocamlbuild.ml:       (* When one link an OCaml library/binary/package, one should use -linkpkg *)
batteries:examples/benchmark/myocamlbuild.ml:       flag ["ocaml"; "byte";   "link"; "program"] & [31;1mA"[39;22m-linkpkg";
batteries:examples/benchmark/myocamlbuild.ml:       flag ["ocaml"; "native"; "link"; "program"] & [31;1mA"[39;22m-linkpkg";
batteries:examples/benchmark/myocamlbuild.ml:       flag ["ocaml"; "native"; "link"; "toplevel"] & [31;1mA"[39;22m-linkpkg";
batteries:---
batteries:examples/benchmark/myocamlbuild.ml:       List.iter begin fun pkg ->
batteries:examples/benchmark/myocamlbuild.ml:         flag ["ocaml"; "compile";  "pkg_"^pkg] & S[[31;1mA"[39;22m-package"; A pkg];
batteries:examples/benchmark/myocamlbuild.ml:         flag ["ocaml"; "ocamldep"; "pkg_"^pkg] & S[[31;1mA"[39;22m-package"; A pkg];
batteries:examples/benchmark/myocamlbuild.ml:         flag ["ocaml"; "doc";      "pkg_"^pkg] & S[[31;1mA"[39;22m-package"; A pkg];
batteries:examples/benchmark/myocamlbuild.ml:         flag ["ocaml"; "link";     "pkg_"^pkg] & S[[31;1mA"[39;22m-package"; A pkg];
batteries:examples/benchmark/myocamlbuild.ml:       end (find_packages ());
batteries:---
batteries:examples/benchmark/myocamlbuild.ml:       List.iter begin fun syntax ->
batteries:examples/benchmark/myocamlbuild.ml:         flag ["ocaml"; "compile";  "syntax_"^syntax] & S[[31;1mA"[39;22m-syntax"; A syntax];
batteries:examples/benchmark/myocamlbuild.ml:         flag ["ocaml"; "ocamldep"; "syntax_"^syntax] & S[[31;1mA"[39;22m-syntax"; A syntax];
batteries:examples/benchmark/myocamlbuild.ml:         flag ["ocaml"; "doc";      "syntax_"^syntax] & S[[31;1mA"[39;22m-syntax"; A syntax];
batteries:examples/benchmark/myocamlbuild.ml:       end (find_syntaxes ());
batteries:---
batteries:examples/benchmark/myocamlbuild.ml:              (*[cl_use_batteries_o]: extensions which only make sense in original syntax*)
batteries:examples/benchmark/myocamlbuild.ml:    and cl_camlp4o         = [[31;1mA"[39;22m-syntax";  A "camlp4o"]
batteries:examples/benchmark/myocamlbuild.ml:    and cl_camlp4r         = [[31;1mA"[39;22m-syntax";  A "camlp4r"] in
batteries:parsed=303 would_break=2
bddrand:parsed=120 would_break=0
bech32:parsed=3 would_break=0
bechamel:parsed=45 would_break=0
beluga:parsed=325 would_break=0
benchmark:parsed=14 would_break=0
bencode:parsed=10 would_break=0
bentov:parsed=5 would_break=0
bestline:parsed=3 would_break=0
bheap:parsed=3 would_break=0
bibtex2html:parsed=28 would_break=0
bidirectional_map:parsed=20 would_break=0
bigarray-compat:parsed=2 would_break=0
bigarray-overlap:parsed=6 would_break=0
bigdecimal:parsed=3 would_break=0
bignum:parsed=14 would_break=0
bigstring:parsed=6 would_break=0
bigstringaf:parsed=5 would_break=0
bimage:parsed=45 would_break=0
bimage-gtk:parsed=31 would_break=0
bimage-lwt:parsed=47 would_break=0
bin_prot:parsed=53 would_break=0
bin_tree:parsed=3 would_break=0
binaryen:parsed=40 would_break=0
binaryen-bin:parsed=0 would_break=0
bindlib:parsed=22 would_break=0
biniou:parsed=17 would_break=0
binning:parsed=2 would_break=0
binsec:parsed=350 would_break=0
bio_io:parsed=43 would_break=0
biotk:parsed=116 would_break=0
bisect_ppx:parsed=50 would_break=0
bitcoin:parsed=11 would_break=0
bitgenerators:parsed=18 would_break=0
bitlib:parsed=4 would_break=0
bitmasks:parsed=5 would_break=0
bitpack_serializer:parsed=9 would_break=0
bitstring:parsed=22 would_break=0
bitv:parsed=7 would_break=0
bitwuzla:parsed=12 would_break=0
bitwuzla-bin:parsed=12 would_break=0
bitwuzla-cxx:parsed=23 would_break=0
bjack:parsed=3 would_break=0
blake3:parsed=4 would_break=0
bloomf:parsed=5 would_break=0
bls12-381:parsed=12776 would_break=0
bls12-381-gen:parsed=53 would_break=0
bls12-381-hash:parsed=15 would_break=0
bls12-381-signature:parsed=8 would_break=0
bls12-381-unix:parsed=50 would_break=0
blurhash:parsed=3 would_break=0
bn128:parsed=8 would_break=0
bnfgen:parsed=7 would_break=0
bogue:parsed=56 would_break=0
bogue-tutorials:parsed=7 would_break=0
boltzgen:parsed=31 would_break=0
bonsai:parsed=969 would_break=0
bos:parsed=29 would_break=0
boulangerie:parsed=6 would_break=0
box:parsed=1 would_break=0
bpf:parsed=4 would_break=0
brisk-reconciler:parsed=17 would_break=0
broken:parsed=5 would_break=0
brr:parsed=58 would_break=0
brr-lwd:parsed=35 would_break=0
bsdowl:parsed=27 would_break=0
bst:parsed=5 would_break=0
buffer-pool:parsed=4 would_break=0
build_path_prefix_map:parsed=4 would_break=0
builder:parsed=6 would_break=0
builder-web:parsed=50 would_break=0
bwd:parsed=12 would_break=0
bwrap:parsed=4 would_break=0
bytebuffer:parsed=12 would_break=0
bytesrw:parsed=37 would_break=0
bytestring:parsed=159 would_break=0
bz2:parsed=3 would_break=0
ca-certs:parsed=3 would_break=0
ca-certs-nss:parsed=4 would_break=0
cachet:parsed=7 would_break=0
cactus:parsed=80 would_break=0
cairn:parsed=7 would_break=0
cairo2:parsed=51 would_break=0
caisar:parsed=77 would_break=0
caisar-ir:parsed=58 would_break=0
calculon:parsed=37 would_break=0
caldav:parsed=31 would_break=0
calendar:parsed=35 would_break=0
calendars:parsed=3 would_break=0
calli:parsed=40 would_break=0
callipyge:parsed=8 would_break=0
camelot:parsed=33 would_break=0
camels:parsed=10 would_break=0
camelsnakekebab:parsed=3 would_break=0
caml-mode:parsed=0 would_break=0
camldiets:parsed=2 would_break=0
camlgpc:parsed=3 would_break=0
camlidl:parsed=61 would_break=0
camlimages:parsed=142 would_break=0
camlix:parsed=7 would_break=0
camlkit:parsed=8073 would_break=0
camlon:parsed=27 would_break=0
camlp-streams:parsed=8 would_break=0
camlp4:myocamlbuild.ml:
camlp4:myocamlbuild.ml:    flag ["ocaml"; "ocamlyacc"] ([31;1mA"[39;22m-v");
camlp4:myocamlbuild.ml:
camlp4:myocamlbuild.ml:    flag ["ocaml"; "compile"; "strict_sequence"] ([31;1mA"[39;22m-strict-sequence");
camlp4:---
camlp4:myocamlbuild.ml:    flag ["ocaml"; "pp"; "camlp4boot"] (P hot_camlp4boot_cmd);
camlp4:myocamlbuild.ml:    flag ["ocaml"; "pp"; "camlp4boot"; "native"] (S[[31;1mA"[39;22m-D"; [31;1mA"[39;22mOPT"]);
camlp4:myocamlbuild.ml:    flag ["ocaml"; "pp"; "camlp4boot"; "pp:dep"] (S[[31;1mA"[39;22m-D"; [31;1mA"[39;22mOPT"]);
camlp4:myocamlbuild.ml:    flag ["ocaml"; "pp"; "camlp4boot"; "pp:doc"] (S[[31;1mA"[39;22m-printer"; [31;1mA"[39;22mo"]);
camlp4:myocamlbuild.ml:    let exn_tracer = Pathname.pwd/"camlp4"/"boot"/"Camlp4ExceptionTracer.cmo" in
camlp4:---
camlp4:myocamlbuild.ml:
camlp4:myocamlbuild.ml:    if windows then flag ["ocamlmklib"] ([31;1mA"[39;22m-custom");
camlp4:---
camlp4:myocamlbuild.ml:           (fun _ _ ->
camlp4:myocamlbuild.ml:              Cmd(S[[31;1mP"[39;22msed"; [31;1mA"[39;22ms/Toploop/Opttoploop/g;s/Topdirs/Opttopdirs/g";
camlp4:myocamlbuild.ml:                    P src; Sh ">"; P dst])))
camlp4:---
camlp4:myocamlbuild.ml:        begin fun _ _ ->
camlp4:myocamlbuild.ml:          Cmd(S[!Options.ocamlc; [31;1mA"[39;22m-a"; T(tags_of_pathname cma++"ocaml"++"link"++"byte");
camlp4:myocamlbuild.ml:                P camlp4lib_cma; [31;1mA"[39;22m-linkall"; atomize cmos; [31;1mA"[39;22m-o"; Px cma])
camlp4:myocamlbuild.ml:        end;
camlp4:---
camlp4:myocamlbuild.ml:            in
camlp4:myocamlbuild.ml:            Cmd(S[!Options.ocamlopt; [31;1mA"[39;22m-a";
camlp4:myocamlbuild.ml:                  T(tags_of_pathname cma++"ocaml"++"link"++"native");
camlp4:myocamlbuild.ml:                  atomize camlp4lib_cmxs; [31;1mA"[39;22m-linkall"; atomize cmxs; [31;1mA"[39;22m-o"; Px cmxa])
camlp4:myocamlbuild.ml:          end
camlp4:---
camlp4:myocamlbuild.ml:          Cmd(S[!Options.ocamlc; T(tags_of_pathname byte++"ocaml"++"link"++"byte");
camlp4:myocamlbuild.ml:                P camlp4lib_cma; [31;1mA"[39;22m-linkall"; atomize cmos; [31;1mA"[39;22m-o"; Px (add_exe byte)])
camlp4:myocamlbuild.ml:        end;
camlp4:---
camlp4:myocamlbuild.ml:          Cmd(S[!Options.ocamlopt; T(tags_of_pathname native++"ocaml"++"link"++"native");
camlp4:myocamlbuild.ml:                P camlp4lib_cmxa; [31;1mA"[39;22m-linkall"; atomize cmxs; [31;1mA"[39;22m-o"; Px (add_exe native)])
camlp4:myocamlbuild.ml:        end
camlp4:parsed=252 would_break=1
camlp5:parsed=516 would_break=0
camlp5-buildscripts:parsed=17 would_break=0
camlpdf:parsed=91 would_break=0
camlprime:parsed=9 would_break=0
camlrack:parsed=21 would_break=0
camlzip:parsed=9 would_break=0
camomile:parsed=116 would_break=0
camyll:parsed=12 would_break=0
canary:parsed=2 would_break=0
caper:parsed=57 would_break=0
capitalization:parsed=2 would_break=0
capnp:parsed=55 would_break=0
capnp-rpc:parsed=128 would_break=0
capnp-rpc-lwt:parsed=134 would_break=0
capnp-rpc-mirage:parsed=136 would_break=0
caqti:testsuite/test_error_cause.ml:      (match Caqti_driver_info.dialect_tag driver_info with
caqti:testsuite/test_error_cause.ml:       | `Mysql -> Caqti_query.[31;1mL"[39;22m ENGINE = InnoDB"
caqti:testsuite/test_error_cause.ml:       | _ -> Caqti_query.S[])
caqti:---
caqti:caqti/lib-template/query.ml:
caqti:caqti/lib-template/query.ml:let nulls t = List.init (Row_type.length t) (fun _ -> [31;1mL"[39;22mNULL")
caqti:---
caqti:caqti/lib-template/query.ml:   | [] -> List.rev acc
caqti:caqti/lib-template/query.ml:   | (([31;1mL"[39;22m" | S[]) :: qs) -> collect acc qs
caqti:caqti/lib-template/query.ml:   | ((P _ | V _ | Q _ | E _ as q) :: qs) -> collect (q :: acc) qs
caqti:---
caqti:caqti/lib-template/query.ml:  and collectL acc accL = function
caqti:caqti/lib-template/query.ml:   | (([31;1mL"[39;22m" | S[]) :: qs) -> collectL acc accL qs
caqti:caqti/lib-template/query.ml:   | (L s :: qs) -> collectL acc (s :: accL) qs
caqti:---
caqti:caqti/lib-template/query.ml:                 | S[] as q' -> q'
caqti:caqti/lib-template/query.ml:                 | q' -> S[q'; [31;1mL"[39;22m."])
caqti:caqti/lib-template/query.ml:             | exception Not_found -> not_found ())
caqti:---
caqti:caqti/lib-template/query.ml:
caqti:caqti/lib-template/query.ml:  let atom_or_semi = (char ';' >>| fun _ -> [31;1mL"[39;22m;") <|> atom
caqti:parsed=177 would_break=2
caqti-dynload:testsuite/test_sql.ml:  let env _ = let open Caqti_query in function
caqti-dynload:testsuite/test_sql.ml:   | "x1" -> [31;1mL"[39;22m734"
caqti-dynload:testsuite/test_sql.ml:   | "x2" -> [31;1mQ"[39;22mI'm quoted."
caqti-dynload:testsuite/test_sql.ml:   | _ -> raise Not_found
caqti-dynload:---
caqti-dynload:testsuite/test_sql.ml:          let quote = match Caqti_driver_info.dialect_tag di with
caqti-dynload:testsuite/test_sql.ml:           | `Mysql -> fun x -> S [L "CAST("; Q x; [31;1mL"[39;22m AS CHAR)"]
caqti-dynload:testsuite/test_sql.ml:           | _ -> fun x -> Q x
caqti-dynload:---
caqti-dynload:testsuite/test_error_cause.ml:      (match Caqti_driver_info.dialect_tag driver_info with
caqti-dynload:testsuite/test_error_cause.ml:       | `Mysql -> Caqti_query.[31;1mL"[39;22m ENGINE = InnoDB"
caqti-dynload:testsuite/test_error_cause.ml:       | _ -> Caqti_query.S[])
caqti-dynload:---
caqti-dynload:testsuite/test_param.ml:    t3 int int int -->! int @@ fun _ ->
caqti-dynload:testsuite/test_param.ml:    S[[31;1mL"[39;22mSELECT 2 * "; P 2; [31;1mL"[39;22m + "; P 2; [31;1mL"[39;22m - 3 * "; P 0; [31;1mL"[39;22m + 5 * "; P 1]
caqti-dynload:---
caqti-dynload:testsuite/test_param.ml:    let env = function
caqti-dynload:testsuite/test_param.ml:     | "." -> Caqti_query.[31;1mL"[39;22m100"
caqti-dynload:testsuite/test_param.ml:     | "fourty" -> Caqti_query.[31;1mL"[39;22m40"
caqti-dynload:testsuite/test_param.ml:     | _ -> raise Not_found
caqti-dynload:---
caqti-dynload:caqti/lib/caqti_query.ml:   | [] -> List.rev acc
caqti-dynload:caqti/lib/caqti_query.ml:   | (([31;1mL"[39;22m" | S[]) :: qs) -> collect acc qs
caqti-dynload:caqti/lib/caqti_query.ml:   | ((P _ | Q _ | E _ as q) :: qs) -> collect (q :: acc) qs
caqti-dynload:---
caqti-dynload:caqti/lib/caqti_query.ml:  and collectL acc accL = function
caqti-dynload:caqti/lib/caqti_query.ml:   | (([31;1mL"[39;22m" | S[]) :: qs) -> collectL acc accL qs
caqti-dynload:caqti/lib/caqti_query.ml:   | (L s :: qs) -> collectL acc (s :: accL) qs
caqti-dynload:---
caqti-dynload:caqti/lib/caqti_query.ml:             | S[] as q' -> q'
caqti-dynload:caqti/lib/caqti_query.ml:             | q' -> S[q'; [31;1mL"[39;22m."]
caqti-dynload:caqti/lib/caqti_query.ml:             | exception Not_found -> not_found ())
caqti-dynload:---
caqti-dynload:caqti/lib/caqti_query.ml:
caqti-dynload:caqti/lib/caqti_query.ml:  let atom_or_semi = (char ';' >>| fun _ -> [31;1mL"[39;22m;") <|> atom
caqti-dynload:---
caqti-dynload:caqti/test/test_query.ml:  ];
caqti-dynload:caqti/test/test_query.ml:  check_expect (S[[31;1mL"[39;22mSELECT "; P 0; [31;1mL"[39;22m::smallint"]) {|SELECT ?::smallint|};
caqti-dynload:caqti/test/test_query.ml:  check_expect (S[[31;1mL"[39;22m$$ "; [31;1mE"[39;22mx"; [31;1mL"[39;22m $$"]) "$$ $(x) $$";
caqti-dynload:caqti/test/test_query.ml:  check_expect (S[[31;1mL"[39;22m$Q$ $(x) $Q$"]) "$Q$ $(x) $Q$";
caqti-dynload:caqti/test/test_query.ml:  check_expect (S[P 0; [31;1mL"[39;22m $$ ? $$ "; P 1; [31;1mL"[39;22m "; P 2]) "? $$ ? $$ ? ?"
caqti-dynload:---
caqti-dynload:caqti/test/test_query.ml:  let env1 = function
caqti-dynload:caqti/test/test_query.ml:   | "" -> Caqti_query.[31;1mL"[39;22mdefault"
caqti-dynload:caqti/test/test_query.ml:   | "alt" -> Caqti_query.[31;1mL"[39;22mother"
caqti-dynload:caqti/test/test_query.ml:   | _ -> raise Not_found
caqti-dynload:---
caqti-dynload:caqti/test/test_query.ml:  let env2 = function
caqti-dynload:caqti/test/test_query.ml:   | "." -> Caqti_query.[31;1mL"[39;22mdefault."
caqti-dynload:caqti/test/test_query.ml:   | "alt." -> Caqti_query.[31;1mL"[39;22mother."
caqti-dynload:caqti/test/test_query.ml:   | _ -> raise Not_found
caqti-dynload:---
caqti-dynload:caqti/test/test_query.ml:  let env3 = function
caqti-dynload:caqti/test/test_query.ml:   | "." -> Caqti_query.[31;1mL"[39;22mdot"
caqti-dynload:caqti/test/test_query.ml:   | "cat" -> Caqti_query.[31;1mL"[39;22mmouse"
caqti-dynload:caqti/test/test_query.ml:   | "cat." -> Caqti_query.[31;1mL"[39;22mdog"
caqti-dynload:caqti/test/test_query.ml:   | _ -> raise Not_found
caqti-dynload:---
caqti-dynload:caqti/test/test_query.ml:  check_expect
caqti-dynload:caqti/test/test_query.ml:    (S [[31;1mL"[39;22mSELECT "; P 0; [31;1mL"[39;22m WHERE "; [31;1mQ"[39;22mquote"; [31;1mL"[39;22m = "; [31;1mE"[39;22menv"])
caqti-dynload:caqti/test/test_query.ml:    (qprintf {|%a %a WHERE %a = %a|} query ([31;1mL"[39;22mSELECT") param 0 quote "quote" env "env");
caqti-dynload:caqti/test/test_query.ml:  check_expect
caqti-dynload:caqti/test/test_query.ml:    (S [[31;1mL"[39;22mWHERE "; [31;1mE"[39;22mtbl4"; [31;1mL"[39;22m.name = "; [31;1mQ"[39;22mJohn Wayne"])
caqti-dynload:caqti/test/test_query.ml:    (qprintf {|WHERE @{<E>tbl%d@}.name = @{<Q>%s Wayne@}|} 4 "John")
caqti-dynload:---
caqti-dynload:caqti/test/test_request.ml:  expect_parse ~env "$(alpha) $$ $beta. $(gamma) $delta. $$ $Q$ $beta. $Q$"
caqti-dynload:caqti/test/test_request.ml:    Q.([31;1mL"[39;22mα $$ β[dot] γ δ. $$ $Q$ $beta. $Q$")
caqti-dynload:---
caqti-dynload:caqti/lib-platform/connection_utils.ml:        S[L(sprintf "INSERT INTO %s (%s) VALUES (" table columns_tuple);
caqti-dynload:caqti/lib-platform/connection_utils.ml:          concat ", " (List.mapi (fun i _ -> P i) columns); [31;1mL"[39;22m)"]
caqti-dynload:caqti/lib-platform/connection_utils.ml:      in
caqti-dynload:---
caqti-dynload:caqti-driver-postgresql/lib/caqti_driver_postgresql.ml:    (* Parameters are not supported for SET. *)
caqti-dynload:caqti-driver-postgresql/lib/caqti_driver_postgresql.ml:    S[[31;1mL"[39;22mSET statement_timeout TO "; L(string_of_int t)]
caqti-dynload:caqti-driver-postgresql/lib/caqti_driver_postgresql.ml:end
caqti-dynload:parsed=117 would_break=8
caqti-tls:testsuite/test_sql.ml:  let env _ = let open Caqti_query in function
caqti-tls:testsuite/test_sql.ml:   | "x1" -> [31;1mL"[39;22m734"
caqti-tls:testsuite/test_sql.ml:   | "x2" -> [31;1mQ"[39;22mI'm quoted."
caqti-tls:testsuite/test_sql.ml:   | _ -> raise Not_found
caqti-tls:---
caqti-tls:testsuite/test_sql.ml:            (match Caqti_driver_info.dialect_tag di with
caqti-tls:testsuite/test_sql.ml:             | `Mysql -> fun x -> S[[31;1mL"[39;22mCAST("; f x; [31;1mL"[39;22m AS "; L tn; [31;1mL"[39;22m)"]
caqti-tls:testsuite/test_sql.ml:             | _ -> f)
caqti-tls:---
caqti-tls:testsuite/test_error_cause.ml:      (match Caqti_driver_info.dialect_tag driver_info with
caqti-tls:testsuite/test_error_cause.ml:       | `Mysql -> Caqti_query.[31;1mL"[39;22m ENGINE = InnoDB"
caqti-tls:testsuite/test_error_cause.ml:       | _ -> Caqti_query.S[])
caqti-tls:---
caqti-tls:testsuite/test_param.ml:    t3 int int int -->! int @@ fun _ ->
caqti-tls:testsuite/test_param.ml:    S[[31;1mL"[39;22mSELECT 2 * "; P 2; [31;1mL"[39;22m + "; P 2; [31;1mL"[39;22m - 3 * "; P 0; [31;1mL"[39;22m + 5 * "; P 1]
caqti-tls:---
caqti-tls:testsuite/test_param.ml:    let env = function
caqti-tls:testsuite/test_param.ml:     | "." -> Caqti_query.[31;1mL"[39;22m100"
caqti-tls:testsuite/test_param.ml:     | "fourty" -> Caqti_query.[31;1mL"[39;22m40"
caqti-tls:testsuite/test_param.ml:     | _ -> raise Not_found
caqti-tls:---
caqti-tls:caqti/lib/caqti_query.ml:
caqti-tls:caqti/lib/caqti_query.ml:let nulls t = List.init (Caqti_type.length t) (fun _ -> [31;1mL"[39;22mNULL")
caqti-tls:---
caqti-tls:caqti/lib/caqti_query.ml:   | [] -> List.rev acc
caqti-tls:caqti/lib/caqti_query.ml:   | (([31;1mL"[39;22m" | S[]) :: qs) -> collect acc qs
caqti-tls:caqti/lib/caqti_query.ml:   | ((P _ | V _ | Q _ | E _ as q) :: qs) -> collect (q :: acc) qs
caqti-tls:---
caqti-tls:caqti/lib/caqti_query.ml:  and collectL acc accL = function
caqti-tls:caqti/lib/caqti_query.ml:   | (([31;1mL"[39;22m" | S[]) :: qs) -> collectL acc accL qs
caqti-tls:caqti/lib/caqti_query.ml:   | (L s :: qs) -> collectL acc (s :: accL) qs
caqti-tls:---
caqti-tls:caqti/lib/caqti_query.ml:             | S[] as q' -> q'
caqti-tls:caqti/lib/caqti_query.ml:             | q' -> S[q'; [31;1mL"[39;22m."]
caqti-tls:caqti/lib/caqti_query.ml:             | exception Not_found -> not_found ())
caqti-tls:---
caqti-tls:caqti/lib/caqti_query.ml:
caqti-tls:caqti/lib/caqti_query.ml:  let atom_or_semi = (char ';' >>| fun _ -> [31;1mL"[39;22m;") <|> atom
caqti-tls:---
caqti-tls:caqti/test/test_query.ml:  ];
caqti-tls:caqti/test/test_query.ml:  check_expect (S[[31;1mL"[39;22mSELECT "; P 0; [31;1mL"[39;22m::smallint"]) {|SELECT ?::smallint|};
caqti-tls:caqti/test/test_query.ml:  check_expect (S[[31;1mL"[39;22m$$ "; [31;1mE"[39;22mx"; [31;1mL"[39;22m $$"]) "$$ $(x) $$";
caqti-tls:caqti/test/test_query.ml:  check_expect (S[[31;1mL"[39;22m$Q$ $(x) $Q$"]) "$Q$ $(x) $Q$";
caqti-tls:caqti/test/test_query.ml:  check_expect (S[P 0; [31;1mL"[39;22m $$ ? $$ "; P 1; [31;1mL"[39;22m "; P 2]) "? $$ ? $$ ? ?"
caqti-tls:---
caqti-tls:caqti/test/test_query.ml:  let env1 = function
caqti-tls:caqti/test/test_query.ml:   | "" -> Caqti_query.[31;1mL"[39;22mdefault"
caqti-tls:caqti/test/test_query.ml:   | "alt" -> Caqti_query.[31;1mL"[39;22mother"
caqti-tls:caqti/test/test_query.ml:   | _ -> raise Not_found
caqti-tls:---
caqti-tls:caqti/test/test_query.ml:  let env2 = function
caqti-tls:caqti/test/test_query.ml:   | "." -> Caqti_query.[31;1mL"[39;22mdefault."
caqti-tls:caqti/test/test_query.ml:   | "alt." -> Caqti_query.[31;1mL"[39;22mother."
caqti-tls:caqti/test/test_query.ml:   | _ -> raise Not_found
caqti-tls:---
caqti-tls:caqti/test/test_query.ml:  let env3 = function
caqti-tls:caqti/test/test_query.ml:   | "." -> Caqti_query.[31;1mL"[39;22mdot"
caqti-tls:caqti/test/test_query.ml:   | "cat" -> Caqti_query.[31;1mL"[39;22mmouse"
caqti-tls:caqti/test/test_query.ml:   | "cat." -> Caqti_query.[31;1mL"[39;22mdog"
caqti-tls:caqti/test/test_query.ml:   | _ -> raise Not_found
caqti-tls:---
caqti-tls:caqti/test/test_query.ml:  check_expect
caqti-tls:caqti/test/test_query.ml:    (S [[31;1mL"[39;22mSELECT "; P 0; [31;1mL"[39;22m WHERE "; [31;1mQ"[39;22mquote"; [31;1mL"[39;22m = "; [31;1mE"[39;22menv"])
caqti-tls:caqti/test/test_query.ml:    (qprintf {|%a %a WHERE %a = %a|} query ([31;1mL"[39;22mSELECT") param 0 quote "quote" env "env");
caqti-tls:caqti/test/test_query.ml:  check_expect
caqti-tls:caqti/test/test_query.ml:    (S [[31;1mL"[39;22mWHERE "; [31;1mE"[39;22mtbl4"; [31;1mL"[39;22m.name = "; [31;1mQ"[39;22mJohn Wayne"])
caqti-tls:caqti/test/test_query.ml:    (qprintf {|WHERE @{<E>tbl%d@}.name = @{<Q>%s Wayne@}|} 4 "John")
caqti-tls:---
caqti-tls:caqti/test/test_request.ml:  expect_parse ~env "$(alpha) $$ $beta. $(gamma) $delta. $$ $Q$ $beta. $Q$"
caqti-tls:caqti/test/test_request.ml:    Q.([31;1mL"[39;22mα $$ β[dot] γ δ. $$ $Q$ $beta. $Q$")
caqti-tls:---
caqti-tls:caqti/lib-platform/connection_utils.ml:        S[L(sprintf "INSERT INTO %s (%s) VALUES (" table columns_tuple);
caqti-tls:caqti/lib-platform/connection_utils.ml:          concat ", " (List.mapi (fun i _ -> P i) columns); [31;1mL"[39;22m)"]
caqti-tls:caqti/lib-platform/connection_utils.ml:      in
caqti-tls:---
caqti-tls:caqti-driver-postgresql/lib/caqti_driver_postgresql.ml:    (* Parameters are not supported for SET. *)
caqti-tls:caqti-driver-postgresql/lib/caqti_driver_postgresql.ml:    S[[31;1mL"[39;22mSET statement_timeout TO "; L(string_of_int t)]
caqti-tls:caqti-driver-postgresql/lib/caqti_driver_postgresql.ml:end
caqti-tls:parsed=137 would_break=8
carbon:parsed=13 would_break=0
carray:parsed=5 would_break=0
carton:parsed=42 would_break=0
carton-git:parsed=32 would_break=0
castore:parsed=6 would_break=0
catala-format:parsed=3 would_break=0
catapult:parsed=44 would_break=0
cb-check:parsed=0 would_break=0
cbor:parsed=3 would_break=0
cborl:parsed=4 would_break=0
ccbg:parsed=1 would_break=0
cdb:parsed=3 would_break=0
cdrom:parsed=3 would_break=0
ceph:parsed=7 would_break=0
certify:parsed=5 would_break=0
cf:parsed=9 would_break=0
cfg:parsed=8 would_break=0
cfml:parsed=115 would_break=0
cgroups:parsed=19 would_break=0
chacha:parsed=5 would_break=0
chalk:parsed=3 would_break=0
chamelon:parsed=26 would_break=0
charInfo_width:parsed=9 would_break=0
charrua:parsed=19 would_break=0
charrua-client-lwt:parsed=19 would_break=0
charset:parsed=9 would_break=0
chartjs:parsed=14 would_break=0
chase:parsed=57 would_break=0
checked_oint:parsed=3 would_break=0
checkseum:parsed=14 would_break=0
choice:parsed=5 would_break=0
chrome-trace:parsed=2459 would_break=0
cid:parsed=5 would_break=0
cinaps:parsed=12 would_break=0
clap:parsed=3 would_break=0
clarity-lang:parsed=17 would_break=0
class_group_vdf:parsed=14 would_break=0
climate:parsed=53 would_break=0
cll:parsed=5 would_break=0
cloudi:parsed=21 would_break=0
clz:parsed=8 would_break=0
cmarker:parsed=3 would_break=0
cmarkit:parsed=38 would_break=0
cmdlang:parsed=77 would_break=0
cmdliner:parsed=48 would_break=0
cmdliner-stdlib:parsed=2 would_break=0
cmitomli:parsed=1 would_break=0
cmon:parsed=3 would_break=0
coap:parsed=10 would_break=0
cobs:parsed=2 would_break=0
coccinelle:parsed=1624 would_break=0
codept:ocamlbuild/myocamlbuild_cs.ml:      tags' in
codept:ocamlbuild/myocamlbuild_cs.ml:  let k = if approx then S [ [31;1mA"[39;22m-k"; A "-verbosity"; A "error" ]
codept:ocamlbuild/myocamlbuild_cs.ml:    else S [] in
codept:---
codept:ocamlbuild/codept_ocamlbuild.ml:      tags' in
codept:ocamlbuild/codept_ocamlbuild.ml:  let k = if approx then S [ [31;1mA"[39;22m-k"; A "-verbosity"; A "error" ]
codept:ocamlbuild/codept_ocamlbuild.ml:    else S [] in
codept:---
codept:ocamlbuild_plugin/codept_ocamlbuild.ml:      tags' in
codept:ocamlbuild_plugin/codept_ocamlbuild.ml:  let k = if approx then S [ [31;1mA"[39;22m-k"; A "-verbosity"; A "error" ]
codept:ocamlbuild_plugin/codept_ocamlbuild.ml:    else S [] in
codept:parsed=339 would_break=3
cohttp:parsed=169 would_break=0
cohttp_async_websocket:parsed=7 would_break=0
cohttp_static_handler:parsed=4 would_break=0
coin:parsed=5 would_break=0
colibrics:parsed=250 would_break=0
colombe:parsed=37 would_break=0
color:parsed=4 would_break=0
color-brewery:parsed=8 would_break=0
colors:parsed=4 would_break=0
combic:parsed=1 would_break=0
combinaml:parsed=3 would_break=0
combinat:parsed=15 would_break=0
comby-semantic:parsed=177 would_break=0
command_rpc:parsed=41 would_break=0
commons:parsed=830 would_break=0
conan:parsed=51 would_break=0
conduit:parsed=56 would_break=0
conex:parsed=47 would_break=0
conex-nocrypto:parsed=47 would_break=0
confero:parsed=16 would_break=0
config:parsed=26 would_break=0
configuration:parsed=6 would_break=0
conformist:parsed=5 would_break=0
conjury:parsed=8 would_break=0
containers:parsed=244 would_break=0
containers-thread:parsed=258 would_break=0
content_security_policy:parsed=3 would_break=0
cookie:parsed=21 would_break=0
cookies:parsed=4 would_break=0
coq-core:parsed=1266 would_break=0
coq-lsp:parsed=583 would_break=0
coq-serapi:parsed=240 would_break=0
coq-shell:parsed=0 would_break=0
coq-waterproof:parsed=23 would_break=0
coqide:parsed=1239 would_break=0
cordova:parsed=0 would_break=0
cordova-plugin-activity-indicator:parsed=1 would_break=0
cordova-plugin-background-mode:parsed=1 would_break=0
cordova-plugin-barcode-scanner:parsed=1 would_break=0
cordova-plugin-battery-status:parsed=1 would_break=0
cordova-plugin-camera:parsed=1 would_break=0
cordova-plugin-clipboard:parsed=1 would_break=0
cordova-plugin-device:parsed=1 would_break=0
cordova-plugin-device-orientation:parsed=1 would_break=0
cordova-plugin-dialogs:parsed=1 would_break=0
cordova-plugin-email-composer:parsed=1 would_break=0
cordova-plugin-fcm:parsed=0 would_break=0
cordova-plugin-file:parsed=1 would_break=0
cordova-plugin-file-opener:parsed=1 would_break=0
cordova-plugin-file-transfer:parsed=1 would_break=0
cordova-plugin-geolocation:parsed=1 would_break=0
cordova-plugin-image-picker:parsed=1 would_break=0
cordova-plugin-inappbrowser:parsed=1 would_break=0
cordova-plugin-insomnia:parsed=1 would_break=0
cordova-plugin-keyboard:parsed=1 would_break=0
cordova-plugin-loading-spinner:parsed=1 would_break=0
cordova-plugin-local-notifications:parsed=1 would_break=0
cordova-plugin-media:parsed=1 would_break=0
cordova-plugin-media-capture:parsed=1 would_break=0
cordova-plugin-network-information:parsed=1 would_break=0
cordova-plugin-progress:parsed=1 would_break=0
cordova-plugin-push-notifications:parsed=0 would_break=0
cordova-plugin-qrscanner:parsed=1 would_break=0
cordova-plugin-screen-orientation:parsed=1 would_break=0
cordova-plugin-sim-card:parsed=1 would_break=0
cordova-plugin-sms:parsed=1 would_break=0
cordova-plugin-social-sharing:parsed=1 would_break=0
cordova-plugin-statusbar:parsed=1 would_break=0
cordova-plugin-toast:parsed=1 would_break=0
cordova-plugin-touch-id:parsed=1 would_break=0
cordova-plugin-vibration:parsed=1 would_break=0
cordova-plugin-videoplayer:parsed=1 would_break=0
core:parsed=533 would_break=0
core_bench:parsed=94 would_break=0
core_extended:parsed=53 would_break=0
core_kernel:parsed=184 would_break=0
core_profiler:parsed=48 would_break=0
core_unix:parsed=236 would_break=0
corosync:parsed=18 would_break=0
cosovo:parsed=5 would_break=0
cow:parsed=16 would_break=0
cpdf:parsed=101 would_break=0
cpm:parsed=7 would_break=0
cppffigen:parsed=5 would_break=0
cppo:parsed=13 would_break=0
cps_toolbox:parsed=23 would_break=0
cpu:parsed=1 would_break=0
cpuid:parsed=3 would_break=0
crc:parsed=3 would_break=0
crlibm:parsed=5 would_break=0
crontab:parsed=6 would_break=0
crowbar:parsed=10 would_break=0
crunch:parsed=10 would_break=0
cry:parsed=3 would_break=0
crypt:parsed=3 would_break=0
cryptokit:parsed=10 would_break=0
cryptoverif:parsed=143 would_break=0
csdp:parsed=0 would_break=0
csexp:parsed=5 would_break=0
css:parsed=13 would_break=0
cstruct:parsed=44 would_break=0
csv:parsed=13 would_break=0
csvfields:parsed=18 would_break=0
ctypes:parsed=223 would_break=0
ctypes-build:ocamlbuild/ctypes_rules.ml:      (fun env build ->
ctypes-build:ocamlbuild/ctypes_rules.ml:         Cmd (S([[31;1mA"[39;22mcc"] @
ctypes-build:ocamlbuild/ctypes_rules.ml:                (match ctypes_libdir with None -> [] | Some d -> [A("-I"); A d]) @
ctypes-build:---
ctypes-build:ocamlbuild/ctypes_rules.ml:                [A("-I"); A ocaml_libdir;
ctypes-build:ocamlbuild/ctypes_rules.ml:                 [31;1mA"[39;22m-o";
ctypes-build:ocamlbuild/ctypes_rules.ml:                 A(env "lib_gen/%_types_detect");
ctypes-build:---
ctypes-build:ocamlbuild/ctypes_rules.ml:        Cmd (S[A(env "lib_gen/%_bindgen.byte");
ctypes-build:ocamlbuild/ctypes_rules.ml:               [31;1mA"[39;22m--config";
ctypes-build:ocamlbuild/ctypes_rules.ml:               A bindings_dir;
ctypes-build:ocamlbuild/ctypes_rules.ml:               [31;1mA"[39;22m--c-file";
ctypes-build:ocamlbuild/ctypes_rules.ml:               A(env (bindings_dir ^"/%_stubs.c"));
ctypes-build:ocamlbuild/ctypes_rules.ml:                 [31;1mA"[39;22m--ml-file";
ctypes-build:ocamlbuild/ctypes_rules.ml:               A(env (bindings_dir ^"/%_generated.ml"))]));
ctypes-build:---
ctypes-build:ocamlbuild/ctypes_rules.ml:        Cmd (S[A(env "lib_gen/%_bindgen.byte");
ctypes-build:ocamlbuild/ctypes_rules.ml:               [31;1mA"[39;22m--config";
ctypes-build:ocamlbuild/ctypes_rules.ml:               [31;1mA"[39;22mlwt";
ctypes-build:ocamlbuild/ctypes_rules.ml:               [31;1mA"[39;22m--c-file";
ctypes-build:ocamlbuild/ctypes_rules.ml:               A(env "lwt/%_lwt_stubs.c");
ctypes-build:ocamlbuild/ctypes_rules.ml:                 [31;1mA"[39;22m--ml-file";
ctypes-build:ocamlbuild/ctypes_rules.ml:               A(env "lwt/%_lwt_generated.ml")]));
ctypes-build:---
ctypes-build:ocamlbuild/ctypes_rules.ml:     | Some ctypes_libdir ->
ctypes-build:ocamlbuild/ctypes_rules.ml:       flag ["c"; "compile"; "use_ctypes"] & S[[31;1mA"[39;22m-I"; A ctypes_libdir]);
ctypes-build:ocamlbuild/ctypes_rules.ml:    (match lwt_libdir with
ctypes-build:---
ctypes-build:ocamlbuild/ctypes_rules.ml:     | Some lwt_libdir ->
ctypes-build:ocamlbuild/ctypes_rules.ml:       flag ["c"; "compile"; "use_lwt"] & S[[31;1mA"[39;22m-I"; A lwt_libdir]);
ctypes-build:ocamlbuild/ctypes_rules.ml:    flag ["c"; "compile"; "debug"] & [31;1mA"[39;22m-g";
ctypes-build:---
ctypes-build:ocamlbuild/ctypes_rules.ml:    flag ["ocaml"; "link"; "byte"; "library"; "use_"^ prefix ^"_stubs"] &
ctypes-build:ocamlbuild/ctypes_rules.ml:      S[[31;1mA"[39;22m-dllib"; A("-l"^ os ^"_"^ prefix ^"_stubs")];
ctypes-build:---
ctypes-build:ocamlbuild/ctypes_rules.ml:    flag ["ocaml"; "link"; "native"; "library"; "use_"^ prefix ^"_stubs"] &
ctypes-build:ocamlbuild/ctypes_rules.ml:      S[[31;1mA"[39;22m-cclib"; A("-l"^ os ^"_"^ prefix ^"_stubs")];
ctypes-build:---
ctypes-build:ocamlbuild/ctypes_rules.ml:    flag ["ocaml"; "link"; "byte"; "library"; "use_"^ prefix ^"_lwt_stubs"] &
ctypes-build:ocamlbuild/ctypes_rules.ml:      S[[31;1mA"[39;22m-dllib"; A("-l"^ os ^"_"^ prefix ^"_lwt_stubs")];
ctypes-build:ocamlbuild/ctypes_rules.ml:    flag ["ocaml"; "link"; "native"; "library"; "use_"^ prefix ^"_lwt_stubs"] &
ctypes-build:ocamlbuild/ctypes_rules.ml:      S[[31;1mA"[39;22m-cclib"; A("-l"^ os ^"_"^ prefix ^"_lwt_stubs")];
ctypes-build:---
ctypes-build:ocamlbuild/ctypes_rules.ml:    flag ["ocaml"; "link"; "byte"; "program"; "use_"^ prefix ^"_stubs"] &
ctypes-build:ocamlbuild/ctypes_rules.ml:      S[[31;1mA"[39;22m-dllib"; A("-l"^ os ^"_"^ prefix ^"_stubs"); [31;1mA"[39;22m-I"; A(bindings_dir ^"/")];
ctypes-build:ocamlbuild/ctypes_rules.ml:    dep ["ocaml"; "link"; "native"; "program"; "use_"^ prefix ^"_stubs"]
ctypes-build:---
ctypes-build:ocamlbuild/ctypes_rules.ml:    flag ["ocaml"; "link"; "byte"; "program"; "use_"^ prefix ^"_lwt_stubs"] &
ctypes-build:ocamlbuild/ctypes_rules.ml:      S[[31;1mA"[39;22m-dllib"; A("-l"^ os ^"_lwt_"^ prefix ^"_stubs")];
ctypes-build:ocamlbuild/ctypes_rules.ml:  end
ctypes-build:parsed=4 would_break=1
ctypes_stubs_js:parsed=4 would_break=0
cubicle:parsed=115 would_break=0
cucumber:parsed=23 would_break=0
cudajit:parsed=9 would_break=0
cudf:parsed=20 would_break=0
cue_sheet_maker:parsed=3 would_break=0
cumulus:parsed=4 would_break=0
curly:parsed=6 would_break=0
current:parsed=154 would_break=0
current-albatross-deployer:parsed=26 would_break=0
current-web-pipelines:parsed=10 would_break=0
current_ansi:parsed=160 would_break=0
current_incr:parsed=11 would_break=0
current_ocluster:parsed=67 would_break=0
curses:parsed=5 would_break=0
curve-sampling:parsed=14 would_break=0
cvc5:parsed=15 would_break=0
daft:parsed=7 would_break=0
dap:parsed=8 would_break=0
data-encoding:parsed=109 would_break=0
datalog:parsed=15 would_break=0
dates_calc:parsed=4 would_break=0
daypack-lib:parsed=72 would_break=0
dbase4:parsed=11 would_break=0
dbf:parsed=2 would_break=0
dblp:parsed=4 would_break=0
dbm:parsed=3 would_break=0
debian-formats:parsed=8 would_break=0
decimal:parsed=8 would_break=0
decoders:parsed=67 would_break=0
decompress:parsed=23 would_break=0
dedent:parsed=6 would_break=0
dedukti:parsed=79 would_break=0
delimcc_of_fxhandler:parsed=3 would_break=0
delimited_parsing:parsed=11 would_break=0
depyt:parsed=3 would_break=0
devkit:parsed=96 would_break=0
diet:parsed=5 would_break=0
diff:parsed=8 would_break=0
diffable:parsed=16 would_break=0
diffast:parsed=305 would_break=0
diffast-etc:parsed=305 would_break=0
digestif:parsed=32 would_break=0
directories:parsed=11 would_break=0
dirsp-exchange:parsed=33 would_break=0
diskuvbox:parsed=5 would_break=0
dispatch:parsed=5 would_break=0
dkim:parsed=16 would_break=0
dkml-c-probe:parsed=13 would_break=0
dkml-compiler-env:parsed=0 would_break=0
dkml-component-staging-ocamlrun:parsed=5 would_break=0
dkml-component-xx-console:parsed=0 would_break=0
dkml-dune-dsl:parsed=23 would_break=0
dkml-install:parsed=84 would_break=0
dkml-option-vcpkg:parsed=1 would_break=0
dkml-runtime-common:parsed=0 would_break=0
dkml-workflows:parsed=10 would_break=0
dlm:parsed=10 would_break=0
dmap:parsed=2 would_break=0
dns:parsed=64 would_break=0
docfd:parsed=43 would_break=0
docker_hub:parsed=2 would_break=0
dockerfile:parsed=16 would_break=0
docout:parsed=3 would_break=0
docteur:parsed=16 would_break=0
doculib:parsed=31 would_break=0
doi2bib:parsed=4 would_break=0
dokeysto:parsed=21 would_break=0
dokeysto_lz4:parsed=21 would_break=0
dolmen:parsed=195 would_break=0
dolog:parsed=4 would_break=0
domain-local-await:parsed=5 would_break=0
domain-local-timeout:parsed=8 would_break=0
domain-name:parsed=3 would_break=0
domain_shims:parsed=20 would_break=0
domainslib:parsed=33 would_break=0
dose3:parsed=135 would_break=0
dot-merlin-reader:parsed=1367 would_break=0
dotenv:parsed=3 would_break=0
down:parsed=17 would_break=0
dream:parsed=44 would_break=0
dream-accept:parsed=6 would_break=0
dream-cli:parsed=10 would_break=0
dream-encoding:parsed=6 would_break=0
dream-html:parsed=13 would_break=0
dream-htmx:parsed=3 would_break=0
dream-livereload:parsed=4 would_break=0
dream-pure:parsed=167 would_break=0
dream-serve:parsed=3 would_break=0
dream_middleware_ext:parsed=16 would_break=0
drom_toml:parsed=112 would_break=0
dscheck:parsed=15 would_break=0
dssi:parsed=4 would_break=0
dtoa:parsed=6 would_break=0
dtools:parsed=6 would_break=0
dual:parsed=3 would_break=0
duff:parsed=4 would_break=0
dune:parsed=2508 would_break=0
dune-cargo-build:parsed=27 would_break=0
dune-compiledb:parsed=1 would_break=0
dune-deps:parsed=15 would_break=0
dune-release:parsed=98 would_break=0
dune-secondary:parsed=1391 would_break=0
duppy:parsed=4 would_break=0
duration:parsed=3 would_break=0
dynamic_gc:parsed=3 would_break=0
earley:parsed=90 would_break=0
earlybird:parsed=66 would_break=0
easy-format:parsed=6 would_break=0
easy_logging:parsed=12 would_break=0
ecaml:parsed=422 would_break=0
edn:parsed=10 would_break=0
efl:parsed=230 would_break=0
ego:parsed=24 would_break=0
eigen:parsed=19 would_break=0
eio:parsed=210 would_break=0
eio-ssl:parsed=2 would_break=0
eio-trace:parsed=29 would_break=0
either:parsed=4 would_break=0
elasticsearch-cli:parsed=4 would_break=0
elina:parsed=2 would_break=0
eliom:parsed=182 would_break=0
elm_core:parsed=33 would_break=0
elpi:parsed=73 would_break=0
email_message:parsed=87 would_break=0
embedded_ocaml_templates:parsed=35 would_break=0
emile:parsed=4 would_break=0
emoji:parsed=5 would_break=0
encoding:parsed=49 would_break=0
encore:parsed=9 would_break=0
enumerators:parsed=7 would_break=0
env_config:parsed=18 would_break=0
epictetus:parsed=16 would_break=0
eprover:parsed=0 would_break=0
eqaf:parsed=29 would_break=0
equinoxe:parsed=23 would_break=0
erlang:parsed=132 would_break=0
errpy:parsed=8 would_break=0
erssical:parsed=21 would_break=0
esperanto-cosmopolitan:parsed=5 would_break=0
ethernet:parsed=4 would_break=0
euler:parsed=19 would_break=0
exenum:parsed=21 would_break=0
exn-source:parsed=3 would_break=0
expect:parsed=9 would_break=0
expect_test_helpers_async:parsed=24 would_break=0
expect_test_helpers_core:parsed=11 would_break=0
extism:parsed=16 would_break=0
extlib:parsed=58 would_break=0
extprot:parsed=43 would_break=0
extunix:discover/discover.ml:    "STATVFS", ANY [
extunix:discover/discover.ml:      statvfs@[[31;1mS"[39;22mstatvfs"];
extunix:discover/discover.ml:      [ DEFINE "CAML_INTERNALS"; I "windows.h"; S "GetDiskFreeSpace"; S "GetDiskFreeSpaceEx"; S "GetVolumeInformation"];
extunix:---
extunix:discover/discover.ml:    ];
extunix:discover/discover.ml:    "FSTATVFS", L ([fd_int]@statvfs@[[31;1mS"[39;22mfstatvfs"]);
extunix:discover/discover.ml:    "SIOCGIFCONF", L[
extunix:---
extunix:discover/discover.ml:      [fd_int;I "unistd.h"; S "syncfs"];
extunix:discover/discover.ml:      [fd_int;DEFINE "EXTUNIX_USE_SYS_SYNCFS"; I "unistd.h"; I "sys/syscall.h"; [31;1mS"[39;22msyscall"; [31;1mV"[39;22mSYS_syncfs"];
extunix:discover/discover.ml:    ];
extunix:---
extunix:discover/discover.ml:    "STRTIME", ANY[
extunix:discover/discover.ml:      [ I "time.h"; [31;1mS"[39;22mstrftime"; [31;1mS"[39;22masctime_r"; [31;1mS"[39;22mtzset"; [31;1mS"[39;22mtzname"; ];
extunix:discover/discover.ml:      [ DEFINE"CAML_INTERNALS"; [31;1mI"[39;22mcaml/osdeps.h"; I "time.h"; Ldlib ("cc", "-lucrtbase");
extunix:discover/discover.ml:        [31;1mS"[39;22mwcsftime"; [31;1mS"[39;22m_wasctime_s"; [31;1mS"[39;22m_tzset"; [31;1mS"[39;22m_get_tzname"; ];
extunix:discover/discover.ml:    ];
extunix:---
extunix:discover/discover.ml:    "TIMEZONE", ANY[
extunix:discover/discover.ml:      [ I "time.h"; [31;1mS"[39;22mtzset"; [31;1mS"[39;22mtimezone"; [31;1mS"[39;22mdaylight" ];
extunix:discover/discover.ml:      [ I "time.h"; Ldlib ("cc", "-lucrtbase"); [31;1mS"[39;22m_tzset"; [31;1mS"[39;22m_get_timezone"; [31;1mS"[39;22m_get_daylight" ];
extunix:discover/discover.ml:    ];
extunix:---
extunix:discover/discover.ml:    "TIMEGM", ANY[
extunix:discover/discover.ml:      [ I "time.h"; [31;1mS"[39;22mtimegm"; ];
extunix:discover/discover.ml:      [ I "time.h"; Ldlib ("cc", "-lucrtbase"); [31;1mS"[39;22m_mkgmtime" ];
extunix:discover/discover.ml:    ];
extunix:---
extunix:discover/discover.ml:    ];
extunix:discover/discover.ml:    "FCNTL", L[ fd_int; [31;1mI"[39;22munistd.h"; [31;1mI"[39;22mfcntl.h"; [31;1mS"[39;22mfcntl"; [31;1mV"[39;22mF_GETFL"; ];
extunix:discover/discover.ml:    "TCPGRP", L[ fd_int; [31;1mI"[39;22munistd.h"; [31;1mS"[39;22mtcgetpgrp"; [31;1mS"[39;22mtcsetpgrp"; ];
extunix:discover/discover.ml:    "EXECINFO", ANY[
extunix:discover/discover.ml:      [ [31;1mI"[39;22mexecinfo.h"; [31;1mS"[39;22mbacktrace"; [31;1mS"[39;22mbacktrace_symbols"; ];
extunix:discover/discover.ml:      [ [31;1mI"[39;22mexecinfo.h"; [31;1mS"[39;22mbacktrace"; [31;1mS"[39;22mbacktrace_symbols"; Ldlib ("cc", "-lexecinfo")];
extunix:discover/discover.ml:    ];
extunix:discover/discover.ml:    "SETENV", L[ [31;1mI"[39;22mstdlib.h"; [31;1mS"[39;22msetenv"; [31;1mS"[39;22munsetenv"; ];
extunix:discover/discover.ml:    "CLEARENV", L[ [31;1mI"[39;22mstdlib.h"; [31;1mS"[39;22mclearenv"; ];
extunix:discover/discover.ml:    "MKDTEMP", L[ [31;1mI"[39;22mstdlib.h"; [31;1mI"[39;22munistd.h"; [31;1mS"[39;22mmkdtemp"; ];
extunix:discover/discover.ml:    "MALLOC_INFO", L[ [31;1mI"[39;22mmalloc.h"; [31;1mS"[39;22mmalloc_info"; ];
extunix:discover/discover.ml:    "MALLOC_STATS", L[ [31;1mI"[39;22mmalloc.h"; [31;1mS"[39;22mmalloc_stats"; ];
extunix:discover/discover.ml:    "MEMALIGN", L[ I "stdlib.h"; [31;1mS"[39;22mposix_memalign"; ];
extunix:discover/discover.ml:    "ENDIAN", ANY[
extunix:---
extunix:discover/discover.ml:      [
extunix:discover/discover.ml:        [31;1mI"[39;22mendian.h";
extunix:discover/discover.ml:        [31;1mD"[39;22mhtobe16"; [31;1mD"[39;22mhtole16"; [31;1mD"[39;22mbe16toh"; [31;1mD"[39;22mle16toh";
extunix:discover/discover.ml:        [31;1mD"[39;22mhtobe32"; [31;1mD"[39;22mhtole32"; [31;1mD"[39;22mbe32toh"; [31;1mD"[39;22mle32toh";
extunix:discover/discover.ml:        [31;1mD"[39;22mhtobe64"; [31;1mD"[39;22mhtole64"; [31;1mD"[39;22mbe64toh"; [31;1mD"[39;22mle64toh";
extunix:discover/discover.ml:      ];
extunix:---
extunix:discover/discover.ml:      [
extunix:discover/discover.ml:        [31;1mI"[39;22msys/endian.h";
extunix:discover/discover.ml:        [31;1mD"[39;22mhtobe16"; [31;1mD"[39;22mhtole16";
extunix:discover/discover.ml:        [31;1mD"[39;22mhtobe32"; [31;1mD"[39;22mhtole32";
extunix:discover/discover.ml:        [31;1mD"[39;22mhtobe64"; [31;1mD"[39;22mhtole64";
extunix:discover/discover.ml:      ];
extunix:---
extunix:discover/discover.ml:        DEFINE "EXTUNIX_USE_OSBYTEORDER_H";
extunix:discover/discover.ml:        [31;1mI"[39;22mlibkern/OSByteOrder.h";
extunix:discover/discover.ml:        [31;1mD"[39;22mOSSwapHostToBigInt32";
extunix:discover/discover.ml:      ];
extunix:---
extunix:discover/discover.ml:        DEFINE "EXTUNIX_USE_WINSOCK2_H";
extunix:discover/discover.ml:        [31;1mI"[39;22mwinsock2.h";
extunix:discover/discover.ml:        [31;1mS"[39;22mhtons"; [31;1mS"[39;22mntohs";
extunix:discover/discover.ml:        [31;1mS"[39;22mhtonl"; [31;1mS"[39;22mntohl";
extunix:discover/discover.ml:        (* S"htonll"; S"ntohll"; 2020-01-06: not supported by mingw-w64 yet *)
extunix:---
extunix:discover/discover.ml:    ];
extunix:discover/discover.ml:    "READ_CREDENTIALS", L[ fd_int; [31;1mI"[39;22msys/types.h"; [31;1mI"[39;22msys/socket.h"; [31;1mD"[39;22mSO_PEERCRED"; ];
extunix:discover/discover.ml:    "FEXECVE", L[ fd_int; I "unistd.h"; [31;1mS"[39;22mfexecve"; ];
extunix:discover/discover.ml:    "SENDMSG", ANY[
extunix:discover/discover.ml:      [ fd_int; [31;1mI"[39;22msys/types.h"; [31;1mI"[39;22msys/socket.h"; [31;1mS"[39;22msendmsg"; [31;1mS"[39;22mrecvmsg"; [31;1mD"[39;22mCMSG_SPACE"; ];
extunix:discover/discover.ml:      [ fd_int; [31;1mI"[39;22msys/types.h"; [31;1mI"[39;22msys/socket.h"; [31;1mS"[39;22msendmsg"; [31;1mS"[39;22mrecvmsg"; F("msghdr","msg_accrights"); ];
extunix:discover/discover.ml:    ];
extunix:discover/discover.ml:    "PREAD", L[ fd_int; I "unistd.h"; [31;1mS"[39;22mpread"; ];
extunix:discover/discover.ml:    "PWRITE", L[ fd_int; I "unistd.h"; [31;1mS"[39;22mpwrite"; ];
extunix:discover/discover.ml:    "READ", L[ fd_int; I "unistd.h"; [31;1mS"[39;22mread"; ];
extunix:discover/discover.ml:    "WRITE", L[ fd_int; I "unistd.h"; [31;1mS"[39;22mwrite"; ];
extunix:discover/discover.ml:    "MKSTEMPS", L[ fd_int; I "stdlib.h"; I "unistd.h"; [31;1mS"[39;22mmkstemps"; ];
extunix:discover/discover.ml:    "MKOSTEMPS", L[ fd_int; I "stdlib.h"; I "unistd.h"; [31;1mS"[39;22mmkostemps"; ];
extunix:discover/discover.ml:    "SETRESUID", L[ [31;1mI"[39;22msys/types.h"; [31;1mI"[39;22munistd.h"; [31;1mS"[39;22msetresuid"; [31;1mS"[39;22msetresgid" ];
extunix:discover/discover.ml:    "SYSCONF", L[
extunix:---
extunix:discover/discover.ml:    ];
extunix:discover/discover.ml:    "SPLICE", L[ fd_int; I "fcntl.h"; [31;1mS"[39;22msplice"; ];
extunix:discover/discover.ml:    "TEE", L[ fd_int; I "fcntl.h"; [31;1mS"[39;22mtee"; ];
extunix:discover/discover.ml:    "VMSPLICE", L[ fd_int; I "fcntl.h"; [31;1mS"[39;22mvmsplice"; ];
extunix:discover/discover.ml:    "SOCKOPT", ANY[
extunix:---
extunix:discover/discover.ml:        fd_int;
extunix:discover/discover.ml:        I "sys/socket.h"; I "netinet/in.h"; [31;1mI"[39;22mnetinet/tcp.h";
extunix:discover/discover.ml:        [31;1mS"[39;22msetsockopt"; [31;1mS"[39;22mgetsockopt";
extunix:discover/discover.ml:      ];
extunix:---
extunix:discover/discover.ml:        I "winsock2.h"; I "ws2tcpip.h";
extunix:discover/discover.ml:        [31;1mS"[39;22msetsockopt"; [31;1mS"[39;22mgetsockopt";
extunix:discover/discover.ml:      ]
extunix:---
extunix:discover/discover.ml:    ];
extunix:discover/discover.ml:    "SO_REUSEPORT", L[[31;1mI"[39;22msys/socket.h"; [31;1mV"[39;22mSO_REUSEPORT"];
extunix:discover/discover.ml:    "POLL", L[ fd_int; I "poll.h"; S "poll"; D "POLLIN"; D "POLLOUT"; Z "POLLRDHUP" ];
extunix:discover/discover.ml:    "SYSINFO", L[ [31;1mI"[39;22msys/sysinfo.h"; [31;1mS"[39;22msysinfo"; F ("sysinfo","mem_unit")];
extunix:discover/discover.ml:    "MCHECK", L[ [31;1mI"[39;22mmcheck.h"; [31;1mS"[39;22mmtrace"; [31;1mS"[39;22mmuntrace" ];
extunix:discover/discover.ml:    "MOUNT", L[ [31;1mI"[39;22msys/mount.h"; S "mount"; S "umount2"; D "MS_REC" ];
extunix:discover/discover.ml:    "UNSHARE", L[ [31;1mI"[39;22msched.h"; S "unshare"; D "CLONE_NEWPID"; D "CLONE_NEWUSER"];
extunix:discover/discover.ml:    "CHROOT", L[ [31;1mI"[39;22munistd.h"; S "chroot"; ];
extunix:discover/discover.ml:    "SYSLOG", L[[31;1mI"[39;22msyslog.h"; S "syslog"; S "openlog"; S "closelog"; S "setlogmask"; D "LOG_PID"; D "LOG_CONS"; D "LOG_NDELAY"; D "LOG_ODELAY"; D "LOG_NOWAIT"; D "LOG_EMERG"; D "LOG_ALERT"; D "LOG_CRIT"; D "LOG_ERR"; D "LOG_WARNING"; D "LOG_NOTICE"; D "LOG_INFO"; D "LOG_DEBUG"];
extunix:discover/discover.ml:    "WAIT4", L[
extunix:parsed=9 would_break=1
ez-conf-lib:parsed=0 would_break=0
ez_api:parsed=136 would_break=0
ez_cmdliner:parsed=11 would_break=0
ez_dune_describe:parsed=8 would_break=0
ez_file:parsed=27 would_break=0
ez_hash:parsed=4 would_break=0
ez_opam_file:parsed=6 would_break=0
ez_pgocaml:parsed=4 would_break=0
ez_search:parsed=15 would_break=0
ez_subst:parsed=8 would_break=0
ezcurl:parsed=6 would_break=0
ezgzip:parsed=4 would_break=0
ezjs_ace:parsed=4 would_break=0
ezjs_blockies:parsed=1 would_break=0
ezjs_cleave:parsed=1 would_break=0
ezjs_crypto:parsed=1 would_break=0
ezjs_cytoscape:parsed=1 would_break=0
ezjs_d3pie:parsed=3 would_break=0
ezjs_extension:parsed=51 would_break=0
ezjs_fetch:parsed=4 would_break=0
ezjs_idb:parsed=3 would_break=0
ezjs_jquery:parsed=2 would_break=0
ezjs_min:parsed=8 would_break=0
ezjs_odometer:parsed=1 would_break=0
ezjs_push:parsed=3 would_break=0
ezjs_qrcode:parsed=1 would_break=0
ezjs_recaptcha:parsed=1 would_break=0
ezjsonm:parsed=7 would_break=0
ezjsonm-encoding:parsed=4 would_break=0
ezresto:parsed=32 would_break=0
ezsqlite:parsed=4 would_break=0
ezxmlm:parsed=2 would_break=0
faad:parsed=4 would_break=0
fadbadml:parsed=42 would_break=0
faraday:parsed=10 would_break=0
farfadet:parsed=4 would_break=0
farith:parsed=58 would_break=0
farmhash:parsed=2 would_break=0
fasmifra:parsed=5 would_break=0
fat-filesystem:parsed=21 would_break=0
fd-send-recv:parsed=5 would_break=0
fdkaac:parsed=5 would_break=0
feat:parsed=29 would_break=0
feather:parsed=6 would_break=0
ff:parsed=7 would_break=0
ffmpeg:parsed=52 would_break=0
fftw3:parsed=13 would_break=0
fiat-p256:parsed=24 would_break=0
fiber:parsed=20 would_break=0
fieldslib:parsed=1 would_break=0
file-rewriter:parsed=8 would_break=0
file_path:parsed=76 would_break=0
fileutils:parsed=34 would_break=0
fit:parsed=4 would_break=0
fix:parsed=64 would_break=0
flac:parsed=43 would_break=0
flatunionfind:parsed=3 would_break=0
flex-array:parsed=3 would_break=0
flexdll:parsed=4 would_break=0
fmlib:parsed=114 would_break=0
fmt:parsed=12 would_break=0
fontforge-of-ocaml:parsed=9 would_break=0
forester:parsed=78 would_break=0
fpath:parsed=9 would_break=0
fpath-base:parsed=20 would_break=0
frama-c:parsed=1791 would_break=0
frama-c-lannotate:parsed=36 would_break=0
frama-c-luncov:parsed=33 would_break=0
frama-c-metacsl:parsed=19 would_break=0
frama-clang:parsed=27 would_break=0
fred:parsed=57 would_break=0
freetds:parsed=9 would_break=0
frei0r:parsed=4 would_break=0
fsevents:parsed=11 would_break=0
fstar:parsed=464 would_break=0
fswatch:parsed=7 would_break=0
fswatch_async:parsed=7 would_break=0
fswatch_lwt:parsed=5 would_break=0
fun-postgresql:parsed=7 would_break=0
functoria:parsed=176 would_break=0
funfields:parsed=3 would_break=0
fuseau:parsed=54 would_break=0
fuzzy_compare:parsed=4 would_break=0
fuzzy_match:parsed=6 would_break=0
fzf:parsed=66 would_break=0
gadelac:parsed=99 would_break=0
gapi-ocaml:parsed=236 would_break=0
gappa:parsed=0 would_break=0
gavl:parsed=3 would_break=0
gccjit:parsed=8 would_break=0
gd:parsed=4 would_break=0
gdbprofiler:parsed=12 would_break=0
gedcom:parsed=2 would_break=0
gel:parsed=2 would_break=0
gemini:parsed=20 would_break=0
gen:parsed=16 would_break=0
gen_js_api:parsed=67 would_break=0
genspio:parsed=19 would_break=0
genspir:parsed=3 would_break=0
geojson:parsed=15 would_break=0
geoml:parsed=39 would_break=0
get_line:parsed=1 would_break=0
getopt:parsed=3 would_break=0
gettext:parsed=51 would_break=0
gg:parsed=10 would_break=0
git:parsed=132 would_break=0
git-kv:parsed=4 would_break=0
git-split:parsed=23 would_break=0
github:parsed=52 would_break=0
github-hooks:parsed=5 would_break=0
gitlab:parsed=29 would_break=0
gitlab_pipeline_notifier:parsed=6 would_break=0
glfw-ocaml:parsed=4 would_break=0
glical:parsed=5 would_break=0
globlon:parsed=5 would_break=0
glpk:parsed=3 would_break=0
gluon:parsed=16 would_break=0
gluten:parsed=22 would_break=0
gmap:parsed=3 would_break=0
gmp:parsed=2 would_break=0
gmp-ecm:parsed=0 would_break=0
gmp-xen:parsed=0 would_break=0
gnuplot:parsed=10 would_break=0
goblint:parsed=355 would_break=0
goblint-cil:parsed=108 would_break=0
google-drive-ocamlfuse:parsed=37 would_break=0
gospel:parsed=228 would_break=0
gotd:parsed=3 would_break=0
gperftools:parsed=2 would_break=0
gpiod:parsed=4 would_break=0
gpr:parsed=21 would_break=0
gpt:parsed=4 would_break=0
gptar:parsed=3 would_break=0
gpx:parsed=2 would_break=0
gr:parsed=8 would_break=0
grace:parsed=25 would_break=0
gradescope_submit:parsed=9 would_break=0
grain_dypgen:parsed=42 would_break=0
graphics:parsed=9 would_break=0
graphicspdf:parsed=0 would_break=0
graphql:parsed=38 would_break=0
graphql_jsoo_client:parsed=9 would_break=0
graphql_ppx:parsed=0 would_break=0
graphv:parsed=78 would_break=0
grenier:parsed=73 would_break=0
grid:parsed=3 would_break=0
grpc:parsed=45 would_break=0
gsl:parsed=132 would_break=0
gstreamer:parsed=11 would_break=0
guardian:parsed=26 would_break=0
guile:parsed=9 would_break=0
gxl-light:parsed=3 would_break=0
h1:parsed=33 would_break=0
h2:parsed=77 would_break=0
hachis:parsed=6 would_break=0
hacl-star:parsed=204 would_break=0
hacl_func:parsed=3 would_break=0
hacl_x25519:parsed=11 would_break=0
happy-eyeballs:parsed=10 would_break=0
hardcaml:parsed=352 would_break=0
hardcaml-lua:parsed=72 would_break=0
hardcaml_axi:parsed=47 would_break=0
hardcaml_c:parsed=17 would_break=0
hardcaml_circuits:parsed=137 would_break=0
hardcaml_event_driven_sim:parsed=40 would_break=0
hardcaml_fixed_point:parsed=18 would_break=0
hardcaml_handshake:parsed=3 would_break=0
hardcaml_of_verilog:parsed=50 would_break=0
hardcaml_step_testbench:parsed=48 would_break=0
hardcaml_verify:parsed=54 would_break=0
hardcaml_verilator:parsed=19 would_break=0
hardcaml_waveterm:parsed=89 would_break=0
hardcaml_xilinx:parsed=71 would_break=0
hardcaml_xilinx_components:parsed=15 would_break=0
hardcaml_xilinx_reports:parsed=18 would_break=0
hashcons:parsed=5 would_break=0
hashset:parsed=0 would_break=0
hc:parsed=3 would_break=0
hdr_histogram:parsed=5 would_break=0
headache:parsed=6 would_break=0
header-check:parsed=3 would_break=0
hector:parsed=13 would_break=0
herdtools7:parsed=867 would_break=0
heroicons-reason-react:parsed=1 would_break=0
hevea:parsed=118 would_break=0
hex:parsed=3 would_break=0
hex_encode:parsed=4 would_break=0
hexstring:parsed=4 would_break=0
hg_lib:parsed=10 would_break=0
hidapi:parsed=7 would_break=0
higher:parsed=9 would_break=0
higher_kinded:parsed=9 would_break=0
highlexer:parsed=5 would_break=0
higlo:parsed=12 would_break=0
hilite:parsed=11 would_break=0
hiredis:parsed=9 would_break=0
hkdf:parsed=3 would_break=0
hl_yaml:parsed=13 would_break=0
hll:parsed=1 would_break=0
hmap:parsed=4 would_break=0
hol2dk:parsed=12 would_break=0
hol_light:parsed=134 would_break=0
hol_light_module:parsed=0 would_break=0
hooke:parsed=3 would_break=0
hsluv:parsed=8 would_break=0
html_of_jsx:parsed=13 would_break=0
htmlfromtexbooks:parsed=6 would_break=0
htmlit:parsed=5 would_break=0
hts_shrink:parsed=20 would_break=0
http-cookie:parsed=3 would_break=0
http-date:parsed=2 would_break=0
http-lwt-client:parsed=5 would_break=0
http-mirage-client:parsed=3 would_break=0
http-multipart-formdata:parsed=4 would_break=0
http_async:parsed=29 would_break=0
httpaf:parsed=42 would_break=0
httpaf_caged:parsed=7 would_break=0
httpcats:parsed=14 would_break=0
httph:parsed=3 would_break=0
httpun:parsed=70 would_break=0
httpun-ws:parsed=37 would_break=0
huffman:parsed=1 would_break=0
hvsock:parsed=35 would_break=0
hxd:parsed=19 would_break=0
hyper:parsed=25 would_break=0
i3ipc:parsed=3 would_break=0
icalendar:parsed=6 would_break=0
idd:parsed=14 would_break=0
imagelib:parsed=20 would_break=0
imguiml:parsed=18 would_break=0
incr_dom:parsed=108 would_break=0
incr_dom_interactive:parsed=3 would_break=0
incr_dom_partial_render:parsed=16 would_break=0
incr_dom_sexp_form:parsed=3 would_break=0
incr_map:parsed=89 would_break=0
incr_select:parsed=7 would_break=0
incremental:parsed=96 would_break=0
indentation_buffer:parsed=2 would_break=0
index:parsed=63 would_break=0
inferno:parsed=58 would_break=0
influxdb:parsed=8 would_break=0
inotify:parsed=9 would_break=0
inquire:parsed=28 would_break=0
inquirer_oc:parsed=11 would_break=0
inspect:parsed=8 would_break=0
int_repr:parsed=2 would_break=0
integers:parsed=11 would_break=0
integers_stubs_js:parsed=1 would_break=0
integration1d:parsed=3 would_break=0
interface-prime:parsed=4 would_break=0
interval:parsed=31 would_break=0
interval-map:parsed=7 would_break=0
inuit:parsed=16 would_break=0
io-page:parsed=5 would_break=0
io-page-unix:parsed=6 would_break=0
iomux:parsed=6 would_break=0
iostream:parsed=21 would_break=0
ip2location:parsed=3 would_break=0
ip2locationio:parsed=3 would_break=0
ip2proxy:parsed=3 would_break=0
ip2whois:parsed=3 would_break=0
ipaddr:parsed=21 would_break=0
irc-client:parsed=24 would_break=0
iri:parsed=7 would_break=0
irmin:parsed=539 would_break=0
irmin-http:parsed=500 would_break=0
irmin-layers:parsed=311 would_break=0
irmin-mem:parsed=247 would_break=0
irmin-tezos-utils:parsed=483 would_break=0
irmin-watcher:parsed=15 would_break=0
iso639:parsed=10 would_break=0
iter:parsed=14 would_break=0
itv-tree:parsed=3 would_break=0
jane-street-headers:parsed=0 would_break=0
jane_rope:parsed=6 would_break=0
janestreet_cpuid:parsed=7 would_break=0
janestreet_csv:parsed=97 would_break=0
janestreet_lru_cache:parsed=6 would_break=0
jasmin:parsed=454 would_break=0
javalib:parsed=56 would_break=0
jekyll-format:parsed=9 would_break=0
jemalloc:parsed=2 would_break=0
jext:parsed=13 would_break=0
jhupllib:parsed=0 would_break=0
jingoo:parsed=20 would_break=0
jose:parsed=22 would_break=0
js_of_ocaml:parsed=830 would_break=0
js_of_ocaml-ocamlbuild:parsed=4 would_break=0
js_of_ocaml_patches:parsed=2 would_break=0
jsonaf:parsed=17 would_break=0
jsonm:parsed=8 would_break=0
jsonoo:parsed=5 would_break=0
jsonrpc:parsed=346 would_break=0
jsonschema2atd:parsed=17 would_break=0
jsont:parsed=26 would_break=0
jsoo_broadcastchannel:parsed=5 would_break=0
jsoo_storage:parsed=4 would_break=0
jst-config:parsed=1 would_break=0
junit:parsed=10 would_break=0
jupyter-kernel:parsed=16 would_break=0
jwto:parsed=3 would_break=0
kcas:parsed=78 would_break=0
kdf:parsed=9 would_break=0
kdl:parsed=18 would_break=0
ke:parsed=13 would_break=0
key-parsers:parsed=18 would_break=0
kicadsch:parsed=24 would_break=0
kind2:parsed=323 would_break=0
kinetic-client:parsed=10 would_break=0
kittyimg:parsed=3 would_break=0
kkmarkdown:parsed=47 would_break=0
kmt:parsed=21 would_break=0
knights_tour:parsed=29 would_break=0
kqueue:parsed=9 would_break=0
krb:parsed=142 would_break=0
kuznechik:parsed=8 would_break=0
lablgl:parsed=114 would_break=0
lablgtk:parsed=282 would_break=0
lablgtk3:parsed=289 would_break=0
lablgtk3-extras:parsed=21 would_break=0
labltk:parsed=192 would_break=0
lacaml:parsed=64 would_break=0
ladspa:parsed=6 would_break=0
lambda:parsed=11 would_break=0
lambda-term:examples/rgb.ml:    LTerm.printls (eval [S(Printf.sprintf "color with component (%d, %d, %d): " r g b);
lambda-term:examples/rgb.ml:                           B_fg(rgb r g b); [31;1mS"[39;22mexample"; E_fg])
lambda-term:examples/rgb.ml:  end
lambda-term:---
lambda-term:examples/colors.ml:      LTerm.printls (eval [S(Printf.sprintf "color %d: " i);
lambda-term:examples/colors.ml:                           B_fg(index i); [31;1mS"[39;22mforeground"; E_fg;
lambda-term:examples/colors.ml:                           [31;1mS"[39;22m ";
lambda-term:examples/colors.ml:                           B_bg(index i); [31;1mS"[39;22mbackground"; E_bg])
lambda-term:examples/colors.ml:      >>= fun () ->
lambda-term:---
lambda-term:examples/colors_256.ml:      LTerm.printls (eval [S(Printf.sprintf "color %d: " i);
lambda-term:examples/colors_256.ml:                           B_fg(index i); [31;1mS"[39;22mexample"; E_fg])
lambda-term:examples/colors_256.ml:      >>= fun () ->
lambda-term:---
lambda-term:examples/shell.ml:    B_fg lcyan;
lambda-term:examples/shell.ml:    [31;1mS"[39;22m─( ";
lambda-term:examples/shell.ml:    B_fg lmagenta; S(Printf.sprintf "%02d:%02d:%02d" tm.Unix.tm_hour tm.Unix.tm_min tm.Unix.tm_sec); E_fg;
lambda-term:examples/shell.ml:    [31;1mS"[39;22m )─< ";
lambda-term:examples/shell.ml:    B_fg lyellow; S path; E_fg;
lambda-term:examples/shell.ml:    [31;1mS"[39;22m >─";
lambda-term:examples/shell.ml:    S(Zed_utf8.make
lambda-term:---
lambda-term:examples/shell.ml:        (Uchar.of_int 0x2500));
lambda-term:examples/shell.ml:    [31;1mS"[39;22m[ ";
lambda-term:examples/shell.ml:    B_fg(if exit_code = 0 then lwhite else lred); S code; E_fg;
lambda-term:examples/shell.ml:    [31;1mS"[39;22m ]─";
lambda-term:examples/shell.ml:    E_fg;
lambda-term:examples/shell.ml:    [31;1mS"[39;22m\n";
lambda-term:---
lambda-term:examples/shell.ml:    B_fg lred; S(try Sys.getenv "USER" with Not_found -> ""); E_fg;
lambda-term:examples/shell.ml:    B_fg lgreen; [31;1mS"[39;22m@"; E_fg;
lambda-term:examples/shell.ml:    B_fg lblue; S(Unix.gethostname ()); E_fg;
lambda-term:examples/shell.ml:    B_fg lgreen; [31;1mS"[39;22m $ "; E_fg;
lambda-term:parsed=77 would_break=4
lambda_streams:parsed=19 would_break=0
lambdapi:parsed=109 would_break=0
lambdasoup:parsed=7 would_break=0
lame:parsed=4 would_break=0
landmarks:parsed=27 would_break=0
lastfm:parsed=8 would_break=0
lazy-trie:parsed=2 would_break=0
lbfgs:parsed=9 would_break=0
lbvs_consent:parsed=42 would_break=0
ldp:parsed=48 would_break=0
leaflet:parsed=20 would_break=0
leaves:parsed=37 would_break=0
ledgerwallet:parsed=22 would_break=0
ledit:parsed=7 would_break=0
legacy_diffable:parsed=18 would_break=0
lem:parsed=122 would_break=0
lens:parsed=7 would_break=0
letsencrypt:parsed=21 would_break=0
letters:parsed=6 would_break=0
libabsolute:parsed=59 would_break=0
libbinaryen:parsed=3 would_break=0
libbpf:parsed=15 would_break=0
libc:parsed=9 would_break=0
libdash:parsed=6 would_break=0
libevent:parsed=6 would_break=0
liblinear:parsed=0 would_break=0
libnlopt:parsed=0 would_break=0
libsail:parsed=174 would_break=0
libsvm_tools:parsed=0 would_break=0
libwasmer:parsed=0 would_break=0
lilac:parsed=3 would_break=0
lilv:parsed=5 would_break=0
line-up-words:parsed=4 would_break=0
line_oriented:parsed=3 would_break=0
linenoise:parsed=3 would_break=0
links:parsed=302 would_break=0
linksem:parsed=167 would_break=0
linol:parsed=13 would_break=0
linwrap:parsed=5 would_break=0
lipsum:parsed=0 would_break=0
liquid_interpreter:parsed=33 would_break=0
liquidsoap:parsed=539 would_break=0
liquidsoap-core:parsed=538 would_break=0
liquidsoap-daemon:parsed=0 would_break=0
little_logger:parsed=5 would_break=0
llama-cpp-ocaml:parsed=11 would_break=0
llama_core:parsed=55 would_break=0
llvm:parsed=38 would_break=0
lmdb:parsed=10 would_break=0
lo:parsed=5 would_break=0
loc:parsed=22 would_break=0
lockfree:parsed=47 would_break=0
logger-p5:parsed=0 would_break=0
logical:parsed=18 would_break=0
logs:parsed=25 would_break=0
logs-async:parsed=4 would_break=0
logs-ppx:parsed=4 would_break=0
logs-syslog:parsed=16 would_break=0
loop:parsed=4 would_break=0
lp:parsed=42 would_break=0
lpd:parsed=6 would_break=0
lpi:parsed=10 would_break=0
lreplay:parsed=18 would_break=0
lru:parsed=5 would_break=0
lru-cache:parsed=3 would_break=0
lru_cache:parsed=3 would_break=0
lt-code:parsed=22 would_break=0
lua-ml:parsed=26 would_break=0
lua_parser:parsed=11 would_break=0
lua_pattern:parsed=9 would_break=0
lucid:parsed=2 would_break=0
lun:parsed=8 would_break=0
lustre-v6:parsed=151 would_break=0
lutils:parsed=13 would_break=0
luv:parsed=107 would_break=0
luv_unix:parsed=105 would_break=0
lwt:parsed=96 would_break=0
lwt-canceler:parsed=5 would_break=0
lwt-dllist:parsed=6 would_break=0
lwt-exit:parsed=16 would_break=0
lwt-parallel:parsed=3 would_break=0
lwt-watcher:parsed=2 would_break=0
lwt_domain:parsed=6 would_break=0
lwt_eio:parsed=4 would_break=0
lwt_glib:parsed=3 would_break=0
lwt_log:parsed=7 would_break=0
lwt_react:parsed=117 would_break=0
lwt_retry:parsed=96 would_break=0
lwt_ssl:parsed=2 would_break=0
lz4:parsed=6 would_break=0
lz4_chans:parsed=3 would_break=0
lzo:parsed=4 would_break=0
m_tree:parsed=6 would_break=0
macaroons:parsed=5 would_break=0
mad:parsed=7 would_break=0
magic:parsed=4 would_break=0
magic-mime:parsed=4 would_break=0
make-random:parsed=27 would_break=0
malfunction:parsed=17 would_break=0
man_in_the_middle_debugger:parsed=3 would_break=0
mariadb:parsed=22 would_break=0
markdown:parsed=4 would_break=0
markup:parsed=63 would_break=0
markup-lwt:parsed=63 would_break=0
mastodon-archive-viewer:parsed=4 would_break=0
matplotlib:parsed=9 would_break=0
mazeppa:parsed=60 would_break=0
mbr-format:parsed=7 would_break=0
mc2:parsed=78 would_break=0
mccs:parsed=8 would_break=0
md2mld:parsed=3 would_break=0
mdx:parsed=112 would_break=0
mec:parsed=146 would_break=0
mehari:parsed=41 would_break=0
mehari-eio-unix:parsed=41 would_break=0
melange:parsed=1589 would_break=0
melange-atdgen-codec-runtime:parsed=14 would_break=0
melange-fest:parsed=3 would_break=0
melange-fetch:parsed=5 would_break=0
melange-jest:parsed=12 would_break=0
melange-json:parsed=26 would_break=0
melange-moment:parsed=0 would_break=0
melange-numeral:parsed=0 would_break=0
melange-radix-icons:parsed=0 would_break=0
melange-recharts:parsed=0 would_break=0
melange-testing-library:parsed=0 would_break=0
melange-webapi:parsed=0 would_break=0
mem_usage:parsed=3 would_break=0
memcpy:myocamlbuild.ml:    (* Linking cstubs *)
memcpy:myocamlbuild.ml:    flag ["c"; "compile"; "use_ctypes"] & S[[31;1mA"[39;22m-I"; A ctypes_libdir];
memcpy:myocamlbuild.ml:    flag ["c"; "compile"; "debug"] & [31;1mA"[39;22m-g";
memcpy:---
memcpy:myocamlbuild.ml:    flag ["ocaml"; "link"; "byte"; "library"; "use_memcpy_stubs"] &
memcpy:myocamlbuild.ml:      S[[31;1mA"[39;22m-dllib"; [31;1mA"[39;22m-lmemcpy_stubs"];
memcpy:myocamlbuild.ml:    flag ["ocaml"; "link"; "native"; "library"; "use_memcpy_stubs"] &
memcpy:myocamlbuild.ml:      S[[31;1mA"[39;22m-cclib"; [31;1mA"[39;22m-lmemcpy_stubs"];
memcpy:---
memcpy:myocamlbuild.ml:    flag ["ocaml"; "link"; "byte"; "program"; "use_memcpy_stubs"] &
memcpy:myocamlbuild.ml:      S[[31;1mA"[39;22m-dllib"; [31;1mA"[39;22m-lmemcpy_stubs"; [31;1mA"[39;22m-I"; [31;1mA"[39;22mlib/"];
memcpy:myocamlbuild.ml:    dep ["ocaml"; "link"; "native"; "program"; "use_memcpy_stubs"]
memcpy:parsed=6 would_break=1
memgraph:parsed=20 would_break=0
memo:parsed=2 would_break=0
memtrace:parsed=25 would_break=0
memtrace_viewer:parsed=136 would_break=0
menhir:parsed=367 would_break=0
menhir-secondary:parsed=367 would_break=0
merge-fmt:parsed=20 would_break=0
mergeable-vector:parsed=4 would_break=0
merlin-extend:parsed=7 would_break=0
merlin-of-pds:parsed=0 would_break=0
mesh:parsed=25 would_break=0
metadata:parsed=32 would_break=0
metadb:parsed=10 would_break=0
metapp:parsed=18 would_break=0
metrics:parsed=14 would_break=0
metrics-mirage:parsed=16 would_break=0
mew:parsed=7 would_break=0
mew_vi:parsed=9 would_break=0
middleware:parsed=3 would_break=0
mikmatch:parsed=22 would_break=0
mimic:parsed=11 would_break=0
mindstorm:parsed=39 would_break=0
minicaml:parsed=25 would_break=0
minicli:parsed=3 would_break=0
minilight:parsed=11 would_break=0
minima-theme:parsed=8 would_break=0
minios-xen:parsed=0 would_break=0
minisat:parsed=5 would_break=0
minivpt:parsed=3 would_break=0
miou:parsed=38 would_break=0
mirage:parsed=161 would_break=0
mirage-block:parsed=12 would_break=0
mirage-block-ccm:parsed=6 would_break=0
mirage-block-lwt:parsed=12 would_break=0
mirage-block-partition:parsed=5 would_break=0
mirage-block-ramdisk:parsed=3 would_break=0
mirage-block-solo5:parsed=2 would_break=0
mirage-block-unix:parsed=6 would_break=0
mirage-block-xen:parsed=9 would_break=0
mirage-bootvar:parsed=9 would_break=0
mirage-bootvar-solo5:parsed=2 would_break=0
mirage-bootvar-unix:parsed=2 would_break=0
mirage-bootvar-xen:parsed=2 would_break=0
mirage-channel:parsed=5 would_break=0
mirage-channel-lwt:parsed=5 would_break=0
mirage-clock:parsed=11 would_break=0
mirage-clock-freestanding:parsed=11 would_break=0
mirage-clock-lwt:parsed=12 would_break=0
mirage-clock-xen:parsed=7 would_break=0
mirage-console:parsed=11 would_break=0
mirage-console-lwt:parsed=12 would_break=0
mirage-console-solo5:parsed=2 would_break=0
mirage-crypto:parsed=61 would_break=0
mirage-crypto-rng-async:parsed=70 would_break=0
mirage-device:parsed=2 would_break=0
mirage-entropy:parsed=3 would_break=0
mirage-flow:parsed=7 would_break=0
mirage-flow-lwt:parsed=7 would_break=0
mirage-fs:parsed=2 would_break=0
mirage-fs-lwt:parsed=4 would_break=0
mirage-fs-mem:parsed=3 would_break=0
mirage-fs-unix:parsed=7 would_break=0
mirage-kv:parsed=3 would_break=0
mirage-kv-lwt:parsed=4 would_break=0
mirage-kv-mem:parsed=3 would_break=0
mirage-kv-unix:parsed=3 would_break=0
mirage-logs:parsed=5 would_break=0
mirage-mtime:parsed=6 would_break=0
mirage-nat:parsed=14 would_break=0
mirage-net:parsed=2 would_break=0
mirage-net-lwt:parsed=3 would_break=0
mirage-net-macosx:parsed=2 would_break=0
mirage-net-solo5:parsed=2 would_break=0
mirage-net-unix:parsed=3 would_break=0
mirage-net-xen:parsed=22 would_break=0
mirage-os-shim:parsed=5 would_break=0
mirage-profile:parsed=9 would_break=0
mirage-protocols:parsed=1 would_break=0
mirage-protocols-lwt:parsed=3 would_break=0
mirage-ptime:parsed=6 would_break=0
mirage-qubes:parsed=14 would_break=0
mirage-random:parsed=1 would_break=0
mirage-random-stdlib:parsed=2 would_break=0
mirage-random-test:parsed=2 would_break=0
mirage-sleep:parsed=3 would_break=0
mirage-solo5:parsed=8 would_break=0
mirage-stack:parsed=1 would_break=0
mirage-stack-lwt:parsed=2 would_break=0
mirage-time:parsed=3 would_break=0
mirage-time-lwt:parsed=4 would_break=0
mirage-types:parsed=76 would_break=0
mirage-unix:parsed=8 would_break=0
mirage-vnetif:parsed=12 would_break=0
mirage-xen:parsed=2 would_break=0
mirage-xen-minios:parsed=0 would_break=0
mirage-xen-posix:parsed=0 would_break=0
misuja:parsed=2 would_break=0
mjson:parsed=6 would_break=0
mkaudio:parsed=16 would_break=0
mkocaml:parsed=5 would_break=0
mlbdd:parsed=3 would_break=0
mlfenv:parsed=5 would_break=0
mlgmpidl:parsed=8 would_break=0
mlmpfr:parsed=18 would_break=0
mlt_parser:parsed=5 would_break=0
mlx:parsed=202 would_break=0
mm:parsed=57 would_break=0
mmap:parsed=5 would_break=0
mmdb:parsed=14 would_break=0
mmo:parsed=63 would_break=0
mnd:parsed=3 would_break=0
mock:parsed=5 would_break=0
molenc:parsed=65 would_break=0
monaco_jsoo:parsed=20 would_break=0
monolith:parsed=201 would_break=0
monomorphic:parsed=3 would_break=0
moonpool:parsed=97 would_break=0
mopsa:parsed=471 would_break=0
morbig:parsed=41 would_break=0
more-ocaml:parsed=2 would_break=0
moss:parsed=4 would_break=0
mparser:parsed=11 would_break=0
mpg123:parsed=10 would_break=0
mpi:parsed=5 would_break=0
mpp:parsed=10 would_break=0
mpris:parsed=10 would_break=0
mqtt:parsed=11 would_break=0
mrmime:parsed=64 would_break=0
msat:parsed=33 would_break=0
msgpck:parsed=5 would_break=0
mtime:parsed=12 would_break=0
mugen:parsed=20 would_break=0
mula:parsed=15 would_break=0
multibase:parsed=9 would_break=0
multicodec:parsed=3 would_break=0
multicont:parsed=13 would_break=0
multicore-bench:parsed=34 would_break=0
multicore-magic:parsed=18 would_break=0
multihash:parsed=11 would_break=0
multipart-form-data:parsed=3 would_break=0
multipart_form:parsed=18 would_break=0
murmur3:parsed=2 would_break=0
mustache:parsed=10 would_break=0
mutaml:parsed=21 would_break=0
mutf8:parsed=4 would_break=0
mwt:parsed=2 would_break=0
mybuild:parsed=3 would_break=0
mysql:parsed=5 would_break=0
mysql8:parsed=3 would_break=0
mysql_protocol:parsed=63 would_break=0
n_ary:parsed=18 would_break=0
naboris:parsed=1 would_break=0
nacc:parsed=5 would_break=0
namespaces:parsed=25 would_break=0
nanoid:parsed=11 would_break=0
nanosvg:parsed=6 would_break=0
nanosvg_text:parsed=6 would_break=0
nbd:parsed=22 would_break=0
netchannel:parsed=22 would_break=0
netlink:parsed=2 would_break=0
netsnmp:parsed=57 would_break=0
nice_parser:parsed=5 would_break=0
ninja_utils:parsed=2 would_break=0
niru:parsed=2 would_break=0
nloge:parsed=7 would_break=0
nlopt:parsed=4 would_break=0
nlp:parsed=3 would_break=0
nmea:parsed=7 would_break=0
nocoiner:parsed=24 would_break=0
nocrypto:parsed=32 would_break=0
node_of_ocaml:parsed=4 would_break=0
nomad:parsed=20 would_break=0
non_empty_list:parsed=3 would_break=0
not-ocamlfind:parsed=44 would_break=0
note:parsed=17 would_break=0
notty:parsed=36 would_break=0
notty_async:parsed=4 would_break=0
np:parsed=183 would_break=0
npy:parsed=4 would_break=0
num:parsed=25 would_break=0
numeric_string:parsed=4 would_break=0
nuscr:parsed=54 would_break=0
obatcher:parsed=14 would_break=0
obelisk:parsed=28 would_break=0
obuild:parsed=94 would_break=0
obuilder:parsed=61 would_break=0
obus:parsed=149 would_break=0
ocal:parsed=6 would_break=0
ocaml-buddy:myocamlbuild.ml:       (* ocaml compile flags *)
ocaml-buddy:myocamlbuild.ml:       flag ["ocaml"; "compile"] & S[[31;1mA"[39;22m-ccopt"; [31;1mA"[39;22m-O9"];
ocaml-buddy:---
ocaml-buddy:myocamlbuild.ml:       (* C compile flags *)
ocaml-buddy:myocamlbuild.ml:       flag ["c"; "compile"] & S[[31;1mA"[39;22m-cc"; [31;1mA"[39;22mgcc"; [31;1mA"[39;22m-ccopt"; [31;1mA"[39;22m-fPIC"];
ocaml-buddy:myocamlbuild.ml:
ocaml-buddy:myocamlbuild.ml:       flag ["c"; "ocamlmklib"] & S[[31;1mA"[39;22m-lbdd";];
ocaml-buddy:---
ocaml-buddy:myocamlbuild.ml:       (* this is used to link cmxs files *)
ocaml-buddy:myocamlbuild.ml:       flag ["link"; "ocaml"; "link_bdd"] ([31;1mA"[39;22mlibbuddy_stubs.a");
ocaml-buddy:---
ocaml-buddy:myocamlbuild.ml:       *)
ocaml-buddy:myocamlbuild.ml:       flag ["ocaml"; "use_bdd"; "link"; "library"; "byte"] & S[[31;1mA"[39;22m-dllib"; [31;1mA"[39;22m-lbuddy_stubs" ];
ocaml-buddy:myocamlbuild.ml:
ocaml-buddy:myocamlbuild.ml:       flag ["ocaml"; "use_bdd"; "link"; "library"; "native"] & S[[31;1mA"[39;22m-cclib"; [31;1mA"[39;22m-lbdd";];
ocaml-buddy:myocamlbuild.ml:       flag ["ocaml"; "use_bdd"; "link"; "library"; "native"] & S[[31;1mA"[39;22m-cclib"; [31;1mA"[39;22m-lbuddy_stubs"; ];
ocaml-buddy:myocamlbuild.ml:
ocaml-buddy:myocamlbuild.ml:       flag ["ocaml"; "use_bdd"; "link"; "program"; "native"] & S[[31;1mA"[39;22m-ccopt"; [31;1mA"[39;22m-L."; [31;1mA"[39;22mbuddy.cmxa"];
ocaml-buddy:myocamlbuild.ml:       flag ["ocaml"; "use_bdd"; "link"; "program"; "byte"] & S[[31;1mA"[39;22m-ccopt"; [31;1mA"[39;22m-L."; [31;1mA"[39;22mbuddy.cma"];
ocaml-buddy:parsed=5 would_break=1
ocaml-canvas:parsed=27 would_break=0
ocaml-compiler-libs:parsed=4 would_break=0
ocaml-embed-file:parsed=11 would_break=0
ocaml-expat:parsed=3 would_break=0
ocaml-inifiles:parsed=2 would_break=0
ocaml-lua:parsed=12 would_break=0
ocaml-makefile:parsed=7 would_break=0
ocaml-manual:parsed=0 would_break=0
ocaml-monadic:parsed=0 would_break=0
ocaml-print-intf:parsed=1 would_break=0
ocaml-probes:parsed=40 would_break=0
ocaml-protoc:parsed=146 would_break=0
ocaml-protoc-plugin:parsed=78 would_break=0
ocaml-r:parsed=32 would_break=0
ocaml-secondary-compiler:testsuite/tests/typing-gadts/omega07.ml:
ocaml-secondary-compiler:testsuite/tests/typing-gadts/omega07.ml:let ex1 = Ab ("x", I, Ap(Ap([31;1mV"[39;22m+",[31;1mV"[39;22mx"),[31;1mV"[39;22mx"));;
ocaml-secondary-compiler:testsuite/tests/typing-gadts/omega07.ml:let c1 = tc NZ ctx0 ex1;;
ocaml-secondary-compiler:---
ocaml-secondary-compiler:testsuite/tests/parsetree/source.ml:
ocaml-secondary-compiler:testsuite/tests/parsetree/source.ml:let ex1 = Ab ("x", I, Ap(Ap([31;1mV"[39;22m+",[31;1mV"[39;22mx"),[31;1mV"[39;22mx"));;
ocaml-secondary-compiler:testsuite/tests/parsetree/source.ml:let c1 = tc NZ ctx0 ex1;;
ocaml-secondary-compiler:parsed=2329 would_break=2
ocaml-syntax-shims:parsed=6 would_break=0
ocaml-systemd:parsed=4 would_break=0
ocaml-top:parsed=16 would_break=0
ocaml-version:parsed=4 would_break=0
ocaml_intrinsics:parsed=45 would_break=0
ocaml_intrinsics_kernel:parsed=27 would_break=0
ocaml_openapi_generator:parsed=41 would_break=0
ocamlbuild:samples/complete-example-menhir-support-in-ocamlbuild/Ocaml_tools.ml:let menhir_ocamldep_command' tags ~menhir_spec out =
ocamlbuild:samples/complete-example-menhir-support-in-ocamlbuild/Ocaml_tools.ml:  let menhir = if !Options.ocamlyacc = N then [31;1mV"[39;22mMENHIR" else !Options.ocamlyacc in
ocamlbuild:samples/complete-example-menhir-support-in-ocamlbuild/Ocaml_tools.ml:  Cmd(S[menhir; T tags; [31;1mA"[39;22m--raw-depend";
ocamlbuild:samples/complete-example-menhir-support-in-ocamlbuild/Ocaml_tools.ml:        [31;1mA"[39;22m--ocamldep"; Quote (ocamldep_command' Tags.empty);
ocamlbuild:samples/complete-example-menhir-support-in-ocamlbuild/Ocaml_tools.ml:        menhir_spec ; Sh ">"; Px out])
ocamlbuild:---
ocamlbuild:src/rule.ml:  open Command
ocamlbuild:src/rule.ml:  let mv src dest = Cmd (S [[31;1mA"[39;22mmv"; P src; Px dest])
ocamlbuild:src/rule.ml:  let cp src dest = Cmd (S [[31;1mA"[39;22mcp"; P src; Px dest])
ocamlbuild:src/rule.ml:  let cp_p src dest = Cmd (S [[31;1mA"[39;22mcp"; [31;1mA"[39;22m-p"; P src; Px dest])
ocamlbuild:src/rule.ml:  let ln_f pointed pointer = Cmd (S [[31;1mA"[39;22mln"; [31;1mA"[39;22m-f"; P pointed; Px pointer])
ocamlbuild:src/rule.ml:  let ln_s pointed pointer = Cmd (S[[31;1mA"[39;22mln"; [31;1mA"[39;22m-s"; P pointed; Px pointer])
ocamlbuild:src/rule.ml:  let rm_f x = Cmd (S [[31;1mA"[39;22mrm"; [31;1mA"[39;22m-f"; Px x])
ocamlbuild:src/rule.ml:  let chmod opts file = Cmd (S[[31;1mA"[39;22mchmod"; opts; Px file])
ocamlbuild:src/rule.ml:  let cmp a b = Cmd (S[[31;1mA"[39;22mcmp"; P a; Px b])
ocamlbuild:src/rule.ml:end
ocamlbuild:---
ocamlbuild:src/plugin.ml:                ocamlbuild_module_spec;
ocamlbuild:src/plugin.ml:                [31;1mA"[39;22m-o"; Px (plugin^(!Options.exe))])
ocamlbuild:src/plugin.ml:        in
ocamlbuild:---
ocamlbuild:src/plugin.ml:      let spec = S[runner; P(!Options.build_dir/plugin^(!Options.exe));
ocamlbuild:src/plugin.ml:                   [31;1mA"[39;22m-no-plugin"; atomize passed_argv] in
ocamlbuild:src/plugin.ml:      Log.finish ();
ocamlbuild:---
ocamlbuild:src/ocaml_tools.ml:let menhir_ocamldep_command' tags ~menhir_spec out =
ocamlbuild:src/ocaml_tools.ml:  let menhir = if !Options.ocamlyacc = N then [31;1mV"[39;22mMENHIR" else !Options.ocamlyacc in
ocamlbuild:src/ocaml_tools.ml:  Cmd(S[menhir; T tags; [31;1mA"[39;22m--raw-depend";
ocamlbuild:src/ocaml_tools.ml:        [31;1mA"[39;22m--ocamldep"; Quote (ocamldep_command' Tags.empty);
ocamlbuild:src/ocaml_tools.ml:        menhir_spec ; Sh ">"; Px out])
ocamlbuild:---
ocamlbuild:src/ocaml_tools.ml:let menhir_modular menhir_base mlypack mlypack_depends env build =
ocamlbuild:src/ocaml_tools.ml:  let menhir = if !Options.ocamlyacc = N then [31;1mV"[39;22mMENHIR" else !Options.ocamlyacc in
ocamlbuild:src/ocaml_tools.ml:  let menhir_base = env menhir_base in
ocamlbuild:---
ocamlbuild:src/ocaml_tools.ml:  let mly = env mly in
ocamlbuild:src/ocaml_tools.ml:  let ocamlyacc = if !Options.ocamlyacc = N then [31;1mV"[39;22mOCAMLYACC" else !Options.ocamlyacc in
ocamlbuild:src/ocaml_tools.ml:  Cmd(S[ocamlyacc; T(tags_of_pathname mly++"ocaml"++"parser"++"ocamlyacc"); Px mly])
ocamlbuild:---
ocamlbuild:src/ocaml_tools.ml:  Ocaml_compiler.prepare_compile build ml;
ocamlbuild:src/ocaml_tools.ml:  Cmd(S[!Options.ocamlc; ocaml_ppflags tags; ocaml_include_flags ml; [31;1mA"[39;22m-i";
ocamlbuild:src/ocaml_tools.ml:        (if Tags.mem "thread" tags then [31;1mA"[39;22m-thread" else N);
ocamlbuild:src/ocaml_tools.ml:        T(tags++"infer_interface"); P ml; Sh">"; Px mli])
ocamlbuild:---
ocamlbuild:src/ocaml_tools.ml:  let ml = Pathname.update_extension "ml" mly in
ocamlbuild:src/ocaml_tools.ml:  let menhir = if !Options.ocamlyacc = N then [31;1mV"[39;22mMENHIR" else !Options.ocamlyacc in
ocamlbuild:src/ocaml_tools.ml:  let ocamlc_tags = tags_of_pathname ml ++"ocaml"++"byte"++"compile" in
ocamlbuild:---
ocamlbuild:src/ocaml_tools.ml:  Cmd(S[menhir;
ocamlbuild:src/ocaml_tools.ml:        [31;1mA"[39;22m--ocamlc"; Quote(S[!Options.ocamlc; T ocamlc_tags; ocaml_include_flags mly]);
ocamlbuild:src/ocaml_tools.ml:        T menhir_tags; Px mly])
ocamlbuild:---
ocamlbuild:src/ocaml_tools.ml:  let tags = tags++"ocaml" in
ocamlbuild:src/ocaml_tools.ml:  Cmd (S [!Options.ocamldoc; [31;1mA"[39;22m-dump"; Px odoc; T(tags++"doc");
ocamlbuild:src/ocaml_tools.ml:          ocaml_ppflags (tags++"pp:doc");
ocamlbuild:---
ocamlbuild:src/ocaml_tools.ml:let ocamldoc_l_dir tags deps _docout docdir =
ocamlbuild:src/ocaml_tools.ml:  Seq[Cmd (S[[31;1mA"[39;22mrm"; [31;1mA"[39;22m-rf"; Px docdir]);
ocamlbuild:src/ocaml_tools.ml:      Cmd (S[[31;1mA"[39;22mmkdir"; [31;1mA"[39;22m-p"; Px docdir]);
ocamlbuild:src/ocaml_tools.ml:      Cmd (S [!Options.ocamldoc;
ocamlbuild:src/ocaml_tools.ml:              S(List.map (fun a -> S[[31;1mA"[39;22m-load"; P a]) deps);
ocamlbuild:src/ocaml_tools.ml:              T(tags++"doc"++"docdir"); [31;1mA"[39;22m-d"; Px docdir])]
ocamlbuild:---
ocamlbuild:src/ocaml_tools.ml:let ocamldoc_l_file tags deps docout _docdir =
ocamlbuild:src/ocaml_tools.ml:  Seq[Cmd (S[[31;1mA"[39;22mrm"; [31;1mA"[39;22m-rf"; Px docout]);
ocamlbuild:src/ocaml_tools.ml:      Cmd (S[[31;1mA"[39;22mmkdir"; [31;1mA"[39;22m-p"; Px (Pathname.dirname docout)]);
ocamlbuild:src/ocaml_tools.ml:      Cmd (S [!Options.ocamldoc;
ocamlbuild:src/ocaml_tools.ml:              S(List.map (fun a -> S[[31;1mA"[39;22m-load"; P a]) deps);
ocamlbuild:src/ocaml_tools.ml:              T(tags++"doc"++"docfile"); [31;1mA"[39;22m-o"; Px docout])]
ocamlbuild:---
ocamlbuild:src/ocaml_tools.ml:
ocamlbuild:src/ocaml_tools.ml:let camlp4 ?(default=[31;1mA"[39;22mcamlp4o") tag i o env build =
ocamlbuild:src/ocaml_tools.ml:  let ml = env i and pp_ml = env o in
ocamlbuild:---
ocamlbuild:src/ocaml_tools.ml:  in
ocamlbuild:src/ocaml_tools.ml:  Cmd(S[pp; P ml; [31;1mA"[39;22m-printer"; [31;1mA"[39;22mo"; [31;1mA"[39;22m-o"; Px pp_ml])
ocamlbuild:---
ocamlbuild:src/ocaml_compiler.ml:  let tags = tags++"ocaml"++"byte" in
ocamlbuild:src/ocaml_compiler.ml:  Cmd (S [!Options.ocamlc; [31;1mA"[39;22m-c"; T(tags++"compile");
ocamlbuild:src/ocaml_compiler.ml:          ocaml_ppflags tags; ocaml_include_flags arg; [31;1mA"[39;22m-o"; Px out; P arg])
ocamlbuild:---
ocamlbuild:src/ocaml_compiler.ml:  Cmd (S [!Options.ocamlc; flag; T tags;
ocamlbuild:src/ocaml_compiler.ml:          include_flags_for_deps deps; atomize_paths deps; [31;1mA"[39;22m-o"; Px out])
ocamlbuild:src/ocaml_compiler.ml:
ocamlbuild:src/ocaml_compiler.ml:let ocamlc_link_lib = ocamlc_link ([31;1mA"[39;22m-a")
ocamlbuild:src/ocaml_compiler.ml:let ocamlc_link_prog = ocamlc_link N
ocamlbuild:---
ocamlbuild:src/ocaml_compiler.ml:  Cmd (S [!Options.ocamlmklib; T tags;
ocamlbuild:src/ocaml_compiler.ml:          atomize_paths deps; [31;1mA"[39;22m-o"; Px (Pathname.remove_extensions out)])
ocamlbuild:---
ocamlbuild:src/ocaml_compiler.ml:  Cmd( S [!Options.ocamlmktop; T (tags++"mktop");
ocamlbuild:src/ocaml_compiler.ml:          atomize_paths deps; [31;1mA"[39;22m-o"; Px out])
ocamlbuild:---
ocamlbuild:src/ocaml_compiler.ml:let ocamlc_p tags deps out =
ocamlbuild:src/ocaml_compiler.ml:  Cmd (S [!Options.ocamlc; [31;1mA"[39;22m-pack"; T tags;
ocamlbuild:src/ocaml_compiler.ml:          atomize_paths deps; [31;1mA"[39;22m-o"; Px out])
ocamlbuild:---
ocamlbuild:src/ocaml_compiler.ml:  let tags = tags++"ocaml"++"native" in
ocamlbuild:src/ocaml_compiler.ml:  Cmd (S [!Options.ocamlopt; [31;1mA"[39;22m-c"; Ocaml_arch.forpack_flags_of_pathname arg;
ocamlbuild:src/ocaml_compiler.ml:          T(tags++"compile"); ocaml_ppflags tags; ocaml_include_flags arg;
ocamlbuild:src/ocaml_compiler.ml:          [31;1mA"[39;22m-o"; Px out (* FIXME ocamlopt bug -o cannot be after the input file *); P arg])
ocamlbuild:---
ocamlbuild:src/ocaml_compiler.ml:  Cmd (S [!Options.ocamlopt; flag; forpack_flags out tags; T tags;
ocamlbuild:src/ocaml_compiler.ml:          include_flags_for_deps deps; atomize_paths deps; [31;1mA"[39;22m-o"; Px out])
ocamlbuild:src/ocaml_compiler.ml:
ocamlbuild:src/ocaml_compiler.ml:let ocamlopt_link_lib = ocamlopt_link ([31;1mA"[39;22m-a")
ocamlbuild:src/ocaml_compiler.ml:let ocamlopt_link_shared_lib = ocamlopt_link ([31;1mA"[39;22m-shared")
ocamlbuild:src/ocaml_compiler.ml:let ocamlopt_link_prog = ocamlopt_link N
ocamlbuild:---
ocamlbuild:src/ocaml_compiler.ml:  let cmd =
ocamlbuild:src/ocaml_compiler.ml:    S [!Options.ocamlopt; [31;1mA"[39;22m-pack"; forpack_flags out tags; T tags;
ocamlbuild:src/ocaml_compiler.ml:       include_flags_for_deps deps; atomize_paths deps;
ocamlbuild:src/ocaml_compiler.ml:       [31;1mA"[39;22m-o"; Px out] in
ocamlbuild:src/ocaml_compiler.ml:  if (*FIXME true ||*) Pathname.exists mli then Cmd cmd
ocamlbuild:---
ocamlbuild:src/ocaml_compiler.ml:  else
ocamlbuild:src/ocaml_compiler.ml:    let rm = S[[31;1mA"[39;22mrm"; [31;1mA"[39;22m-f"; P mli] in
ocamlbuild:src/ocaml_compiler.ml:    Cmd(S[[31;1mA"[39;22mtouch"; P mli; Sh" ; if "; cmd; Sh" ; then "; rm; Sh" ; else ";
ocamlbuild:src/ocaml_compiler.ml:          rm; Sh" ; exit 1; fi"])
ocamlbuild:---
ocamlbuild:src/main.ml:          if !Options.make_links then
ocamlbuild:src/main.ml:            ignore (call (S [[31;1mA"[39;22mln"; [31;1mA"[39;22m-sf"; P x; A Pathname.pwd]))
ocamlbuild:src/main.ml:        in
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:    end results in
ocamlbuild:src/ocaml_specific.ml:    Cmd(S[!Options.ocamlmklib; [31;1mA"[39;22m-o"; Px libname; T(tags_of_pathname a++"c"++"ocamlmklib"); atomize objs]);;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:     *)
ocamlbuild:src/ocaml_specific.ml:    let cc = Cmd(S[comp; T(tags_of_pathname c++"c"++"compile"); [31;1mA"[39;22m-c"; Px c]) in
ocamlbuild:src/ocaml_specific.ml:    if Pathname.dirname o = Pathname.current_dir_name then cc
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:    (* Ocamlfind will link the archives for us. *)
ocamlbuild:src/ocaml_specific.ml:    flag ["ocaml"; "link"; "program"] & [31;1mA"[39;22m-linkpkg";
ocamlbuild:src/ocaml_specific.ml:    flag ["ocaml"; "link"; "toplevel"] & [31;1mA"[39;22m-linkpkg";
ocamlbuild:src/ocaml_specific.ml:    flag ["ocaml"; "link"; "output_obj"] & [31;1mA"[39;22m-linkpkg";
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:       explicitly. *)
ocamlbuild:src/ocaml_specific.ml:    flag ["ocaml"; "link"; "library"; "linkpkg"] & [31;1mA"[39;22m-linkpkg";
ocamlbuild:src/ocaml_specific.ml:    pflag ["ocaml"; "link"] "dontlink" ~doc_param
ocamlbuild:src/ocaml_specific.ml:          (fun pkg -> S[[31;1mA"[39;22m-dontlink"; A pkg]);
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:
ocamlbuild:src/ocaml_specific.ml:camlp4_flags' ["camlp4orr", S[[31;1mA"[39;22mcamlp4of"; [31;1mA"[39;22m-parser"; [31;1mA"[39;22mreloaded"];
ocamlbuild:src/ocaml_specific.ml:               "camlp4rrr", S[[31;1mA"[39;22mcamlp4rf"; [31;1mA"[39;22m-parser"; [31;1mA"[39;22mreloaded"]];;
ocamlbuild:src/ocaml_specific.ml:
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "pp"; "camlp4:no_quot"] ([31;1mA"[39;22m-no_quot");;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "compile"; "use_camlp4_full"]
ocamlbuild:src/ocaml_specific.ml:     (S[[31;1mA"[39;22m-I"; A(camlp4dir^"/Camlp4Parsers");
ocamlbuild:src/ocaml_specific.ml:        [31;1mA"[39;22m-I"; A(camlp4dir^"/Camlp4Printers");
ocamlbuild:src/ocaml_specific.ml:        [31;1mA"[39;22m-I"; A(camlp4dir^"/Camlp4Filters")]);;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "use_camlp4_bin"; "link"; "byte"] (A(camlp4dir^"/Camlp4Bin.cmo"));;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:flag ["c";     "debug"; "link"] (A "-g");
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "link"; "native"; "output_obj"] ([31;1mA"[39;22m-output-obj");;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "link"; "byte"; "output_obj"] ([31;1mA"[39;22m-output-obj");;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "dtypes"; "compile"] (A "-dtypes");;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:else begin
ocamlbuild:src/ocaml_specific.ml:  flag ["ocaml"; "doc"; "thread"] (S[[31;1mA"[39;22m-I"; [31;1mA"[39;22m+threads"]);
ocamlbuild:src/ocaml_specific.ml:  flag ["ocaml"; "link"; "thread"; "native"; "program"] (A "threads.cmxa");
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "compile"; "nostdlib"] ([31;1mA"[39;22m-nostdlib");;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "infer_interface"; "nostdlib"] ([31;1mA"[39;22m-nostdlib");;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "link"; "nostdlib"] ([31;1mA"[39;22m-nostdlib");;
ocamlbuild:src/ocaml_specific.ml:
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "compile"; "nopervasives"] ([31;1mA"[39;22m-nopervasives");;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "infer_interface"; "nopervasives"] ([31;1mA"[39;22m-nopervasives");;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "compile"; "nolabels"] ([31;1mA"[39;22m-nolabels");;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "infer_interface"; "nolabels"] ([31;1mA"[39;22m-nolabels");;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:(*flag ["ocaml"; "ocamlyacc"; "quiet"] (A"-q");;*)
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "ocamllex"; "quiet"] ([31;1mA"[39;22m-q");;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:    ["ocaml"; "compile"; sprintf "warn_%c" (Char.uppercase_ascii c)]
ocamlbuild:src/ocaml_specific.ml:    (S[[31;1mA"[39;22m-w"; A (sprintf "%c" (Char.uppercase_ascii c))]);
ocamlbuild:src/ocaml_specific.ml:  flag ~deprecated:true
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:    ["ocaml"; "compile"; sprintf "warn_error_%c" (Char.uppercase_ascii c)]
ocamlbuild:src/ocaml_specific.ml:    (S[[31;1mA"[39;22m-warn-error"; A (sprintf "%c" (Char.uppercase_ascii c))]);
ocamlbuild:src/ocaml_specific.ml:  flag ~deprecated:true
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:    ["ocaml"; "compile"; sprintf "warn_%c" (Char.lowercase_ascii c)]
ocamlbuild:src/ocaml_specific.ml:    (S[[31;1mA"[39;22m-w"; A (sprintf "%c" (Char.lowercase_ascii c))]);
ocamlbuild:src/ocaml_specific.ml:  flag ~deprecated:true
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:    ["ocaml"; "compile"; sprintf "warn_error_%c" (Char.lowercase_ascii c)]
ocamlbuild:src/ocaml_specific.ml:    (S[[31;1mA"[39;22m-warn-error"; A (sprintf "%c" (Char.lowercase_ascii c))]);;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "doc"; "docdir"; "html"] ([31;1mA"[39;22m-html");;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "doc"; "docdir"; "man"] ([31;1mA"[39;22m-man");;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "doc"; "docfile"; "dot"] ([31;1mA"[39;22m-dot");;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "doc"; "docfile"; "tex"] ([31;1mA"[39;22m-latex");;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "doc"; "docfile"; "texi"] ([31;1mA"[39;22m-texi");;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "native"; "compile"; "inlining_report"]
ocamlbuild:src/ocaml_specific.ml:  ([31;1mA"[39;22m-inlining-report");;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "native"; "compile"; "remove_unused_arguments"]
ocamlbuild:src/ocaml_specific.ml:  ([31;1mA"[39;22m-remove-unused-arguments");;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "native"; "compile"; "unbox_closures"]
ocamlbuild:src/ocaml_specific.ml:  ([31;1mA"[39;22m-unbox-closures");;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "native"; "compile"; "no_unbox_free_vars_of_closures"]
ocamlbuild:src/ocaml_specific.ml:  ([31;1mA"[39;22m-no-unbox-free-vars-of-closures");;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "native"; "compile"; "no_unbox_specialized_args"]
ocamlbuild:src/ocaml_specific.ml:  ([31;1mA"[39;22m-no-unbox-specialized-args");;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:(* Kept for backward compatibility. *)
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "doc"; "docdir"; "manpage"] ([31;1mA"[39;22m-man");;
ocamlbuild:---
ocamlbuild:src/ocaml_specific.ml:  (fun param -> S [A "-dot-colors"; A param]);;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "doc"; "dot"; "dot_include_all"] ([31;1mA"[39;22m-dot-include-all");;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "doc"; "dot"; "dot_reduce"] ([31;1mA"[39;22m-dot-reduce");;
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "doc"; "dot"; "dot_types"] ([31;1mA"[39;22m-dot-types");;
ocamlbuild:src/ocaml_specific.ml:
ocamlbuild:src/ocaml_specific.ml:flag ["ocaml"; "doc"; "man"; "man_mini"] ([31;1mA"[39;22m-man-mini");;
ocamlbuild:src/ocaml_specific.ml:pflag ["ocaml"; "doc"; "man"] "man_suffix"
ocamlbuild:---
ocamlbuild:src/ocaml_arch.ml:      let for_pack = Hashtbl.find for_pack_table m' in
ocamlbuild:src/ocaml_arch.ml:      if for_pack = "" then N else S[[31;1mA"[39;22m-for-pack"; A for_pack]
ocamlbuild:src/ocaml_arch.ml:    with Not_found -> previous_forpack_flags_of_pathname m
ocamlbuild:---
ocamlbuild:src/ocaml_utils.ml:    (Command.run_spec_and_read ~quiet:true
ocamlbuild:src/ocaml_utils.ml:       (S[!Options.ocamlc; [31;1mA"[39;22m-where"]))
ocamlbuild:src/ocaml_utils.ml:end
ocamlbuild:---
ocamlbuild:src/ocaml_utils.ml:  let reduced = Command.reduce flags in
ocamlbuild:src/ocaml_utils.ml:  if reduced = N then N else S[[31;1mA"[39;22m-pp"; Quote reduced]
ocamlbuild:---
ocamlbuild:src/ocaml_utils.ml:let ocaml_add_include_flag x acc =
ocamlbuild:src/ocaml_utils.ml:  if x = Pathname.current_dir_name then acc else [31;1mA"[39;22m-I" :: A x :: acc
ocamlbuild:---
ocamlbuild:src/ocaml_utils.ml:    match dir with
ocamlbuild:src/ocaml_utils.ml:    | Some dir -> S[[31;1mA"[39;22m-I"; P dir; x]
ocamlbuild:src/ocaml_utils.ml:    | None -> x
ocamlbuild:---
ocamlbuild:src/ocaml_utils.ml:      List.iter
ocamlbuild:src/ocaml_utils.ml:        (fun x -> flag ["ocaml"; tag_name; x] (S[[31;1mA"[39;22m-I"; P dir]))
ocamlbuild:src/ocaml_utils.ml:        ["compile"; "doc"; "infer_interface"]
ocamlbuild:---
ocamlbuild:src/options.ml:    "ocamlyacc"; "menhir"; "ocamllex"; "ocamlmklib"; "ocamlmktop"; "ocamlfind"]
ocamlbuild:src/options.ml:let ocamlc = ref ([31;1mV"[39;22mOCAMLC")
ocamlbuild:src/options.ml:let plugin_ocamlc = ref ([31;1mV"[39;22mOCAMLC")
ocamlbuild:src/options.ml:let ocamlopt = ref ([31;1mV"[39;22mOCAMLOPT")
ocamlbuild:src/options.ml:let plugin_ocamlopt = ref ([31;1mV"[39;22mOCAMLOPT")
ocamlbuild:src/options.ml:let ocamldep = ref ([31;1mV"[39;22mOCAMLDEP")
ocamlbuild:src/options.ml:let ocamldoc = ref ([31;1mV"[39;22mOCAMLDOC")
ocamlbuild:src/options.ml:let ocamlyacc = ref N
ocamlbuild:src/options.ml:let ocamllex = ref ([31;1mV"[39;22mOCAMLLEX")
ocamlbuild:src/options.ml:let ocamlmklib = ref ([31;1mV"[39;22mOCAMLMKLIB")
ocamlbuild:src/options.ml:let ocamlmktop = ref ([31;1mV"[39;22mOCAMLMKTOP")
ocamlbuild:src/options.ml:let ocamlrun = ref N
ocamlbuild:src/options.ml:let ocamlfind_cmd = ref ([31;1mV"[39;22mOCAMLFIND")
ocamlbuild:src/options.ml:let ocamlfind arg =
ocamlbuild:---
ocamlbuild:src/options.ml:  else
ocamlbuild:src/options.ml:    S[!ocamlfind_cmd; [31;1mA"[39;22m-toolchain"; A!toolchain; arg]
ocamlbuild:src/options.ml:let plugin_ocamlfind arg = S[!ocamlfind_cmd; arg]
ocamlbuild:parsed=185 would_break=10
ocamlbuild-atdgen:parsed=3 would_break=0
ocamlbuild-protoc:parsed=0 would_break=0
ocamlcodoc:parsed=5 would_break=0
ocamldiff:parsed=6 would_break=0
ocamldot:parsed=11 would_break=0
ocamlfind:parsed=39 would_break=0
ocamlfind-secondary:parsed=38 would_break=0
ocamlformat:bench/test/source.ml:
ocamlformat:bench/test/source.ml:let ex1 = Ab ("x", I, Ap(Ap([31;1mV"[39;22m+",[31;1mV"[39;22mx"),[31;1mV"[39;22mx"));;
ocamlformat:bench/test/source.ml:let c1 = tc NZ ctx0 ex1;;
ocamlformat:---
ocamlformat:test/passing/tests/source.ml:
ocamlformat:test/passing/tests/source.ml:let ex1 = Ab ("x", I, Ap(Ap([31;1mV"[39;22m+",[31;1mV"[39;22mx"),[31;1mV"[39;22mx"));;
ocamlformat:test/passing/tests/source.ml:let c1 = tc NZ ctx0 ex1;;
ocamlformat:parsed=415 would_break=2
ocamlformat-mlx:bench/test/source.ml:
ocamlformat-mlx:bench/test/source.ml:let ex1 = Ab ("x", I, Ap(Ap([31;1mV"[39;22m+",[31;1mV"[39;22mx"),[31;1mV"[39;22mx"));;
ocamlformat-mlx:bench/test/source.ml:let c1 = tc NZ ctx0 ex1;;
ocamlformat-mlx:---
ocamlformat-mlx:test/passing/tests/source.ml:
ocamlformat-mlx:test/passing/tests/source.ml:let ex1 = Ab ("x", I, Ap(Ap([31;1mV"[39;22m+",[31;1mV"[39;22mx"),[31;1mV"[39;22mx"));;
ocamlformat-mlx:test/passing/tests/source.ml:let c1 = tc NZ ctx0 ex1;;
ocamlformat-mlx:---
ocamlformat-mlx:test/passing/tests/js_source.ml:
ocamlformat-mlx:test/passing/tests/js_source.ml:let ex1 = Ab ("x", I, Ap(Ap([31;1mV"[39;22m+",[31;1mV"[39;22mx"),[31;1mV"[39;22mx"));;
ocamlformat-mlx:test/passing/tests/js_source.ml:let c1 = tc NZ ctx0 ex1;;
ocamlformat-mlx:parsed=416 would_break=3
ocamlfuse:parsed=10 would_break=0
ocamlgraph:parsed=166 would_break=0
ocamlgraph_gtk:parsed=154 would_break=0
ocamlify:parsed=2 would_break=0
ocamline:parsed=5 would_break=0
ocamlmig:parsed=175 would_break=0
ocamlog:parsed=6 would_break=0
ocamlregextkit:parsed=15 would_break=0
ocamlscript:parsed=17 would_break=0
ocamlsdl2:parsed=91 would_break=0
ocamlsdl2-image:parsed=7 would_break=0
ocamlsdl2-ttf:parsed=4 would_break=0
ocamlwc:parsed=0 would_break=0
ocamlyices:parsed=3 would_break=0
ocannl_npy:parsed=51 would_break=0
ocb:parsed=7 would_break=0
ocb-stubblr:src/ocb_stubblr.ml:    let comp = if Tags.mem "native" (tags_of_pathname c) then !Options.ocamlopt else !Options.ocamlc in
ocb-stubblr:src/ocb_stubblr.ml:    let cc = Cmd(S[comp; T(tags_of_pathname c++"c"++"compile"); [31;1mA"[39;22m-c"; Px c]) in
ocb-stubblr:src/ocb_stubblr.ml:    if Pathname.dirname o = Pathname.current_dir_name then cc
ocb-stubblr:parsed=5 would_break=1
ocf:parsed=6 would_break=0
ockt:parsed=4 would_break=0
oclock:parsed=4 would_break=0
ocolor:parsed=22 would_break=0
ocp-browser:parsed=24 would_break=0
ocp-indent:parsed=131 would_break=0
ocp-indent-nlfork:parsed=123 would_break=0
ocp-ocamlres:parsed=11 would_break=0
ocp-reloc:parsed=3 would_break=0
ocp_reveal:parsed=8 would_break=0
ocplib-endian:parsed=17 would_break=0
ocplib-json-typed:parsed=12 would_break=0
ocplib-simplex:parsed=23 would_break=0
ocplib_stuff:parsed=16 would_break=0
ocsigen-i18n:parsed=3 would_break=0
ocsigen-ppx-rpc:parsed=1 would_break=0
ocsigen-start:parsed=13 would_break=0
ocsigen-toolkit:parsed=0 would_break=0
ocsigenserver:parsed=67 would_break=0
ocsipersist:parsed=19 would_break=0
octavius:parsed=11 would_break=0
ocurl:parsed=18 would_break=0
odate:parsed=6 would_break=0
odbc:parsed=16 would_break=0
odds:parsed=6 would_break=0
odep:parsed=24 would_break=0
odepack:parsed=10 would_break=0
odig:parsed=11 would_break=0
odnnr:parsed=4 would_break=0
odoc:parsed=560 would_break=0
odoc-depgraph:parsed=5 would_break=0
oepub:parsed=26 would_break=0
of_json:parsed=13 would_break=0
oframl:parsed=6 would_break=0
ofx:parsed=0 would_break=0
ohex:parsed=3 would_break=0
oidc:parsed=39 would_break=0
ojo:parsed=10 would_break=0
ojs_base:parsed=39 would_break=0
ollvm:parsed=10 would_break=0
ollvm-tapir:parsed=11 would_break=0
oma:parsed=6 would_break=0
omake:parsed=226 would_break=0
omd:parsed=20 would_break=0
ometrics:parsed=23 would_break=0
omigrate:parsed=19 would_break=0
oml:myocamlbuild.ml:      Ocaml_compiler.prepare_compile build mlj;
oml:myocamlbuild.ml:      Cmd ( S [ !Options.ocamlc; [31;1mA"[39;22m-c"; Ocaml_arch.forpack_flags_of_pathname mlj
oml:myocamlbuild.ml:              ; T tags
oml:---
oml:myocamlbuild.ml:      Ocaml_compiler.prepare_link cmx cmi ["cmx"; "cmi"] build;
oml:myocamlbuild.ml:      Cmd ( S [ !Options.ocamlopt; [31;1mA"[39;22m-c"; Ocaml_arch.forpack_flags_of_pathname mlj
oml:myocamlbuild.ml:              ; T tags
oml:parsed=79 would_break=1
omlr:parsed=4 would_break=0
omod:parsed=17 would_break=0
omtl:parsed=7 would_break=0
oneffs:parsed=2 would_break=0
oniguruma:parsed=9 would_break=0
opam-0install:parsed=22 would_break=0
opam-0install-cudf:parsed=6 would_break=0
opam-build:parsed=8 would_break=0
opam-check-npm-deps:parsed=52 would_break=0
opam-client:parsed=228 would_break=0
opam-compiler:parsed=38 would_break=0
opam-custom-install:parsed=1 would_break=0
opam-depext:parsed=3 would_break=0
opam-dune-lint:parsed=12 would_break=0
opam-ed:parsed=1 would_break=0
opam-file-format:parsed=13 would_break=0
opam-graph:parsed=2 would_break=0
opam-grep:parsed=5 would_break=0
opam-monorepo:parsed=3526 would_break=0
opam-publish:parsed=4 would_break=0
opamconfig:parsed=0 would_break=0
opasswd:parsed=7 would_break=0
openQASM:parsed=2 would_break=0
openapi:parsed=8 would_break=0
openbsd:parsed=5 would_break=0
opencc0:parsed=2 would_break=0
opencc1:parsed=2 would_break=0
opencc1_1:parsed=2 would_break=0
openstellina:parsed=6 would_break=0
opentelemetry:parsed=62 would_break=0
operf-micro:parsed=82 would_break=0
opine:parsed=7 would_break=0
opium:parsed=101 would_break=0
opium_kernel:parsed=31 would_break=0
oplot:parsed=34 would_break=0
oplsr:parsed=5 would_break=0
opomodoro:parsed=7 would_break=0
optal:parsed=17 would_break=0
opti:parsed=18 would_break=0
optimization1d:parsed=7 would_break=0
optiml-transport:parsed=3 would_break=0
optint:parsed=14 would_break=0
oraft:parsed=32 would_break=0
oranger:parsed=8 would_break=0
orb:parsed=3 would_break=0
order-i3-xfce:parsed=2 would_break=0
ordinal:parsed=2 would_break=0
ordinal_abbreviation:parsed=3 would_break=0
orec:parsed=0 would_break=0
orewa:parsed=6 would_break=0
orf:parsed=10 would_break=0
orgeat:parsed=17 would_break=0
orocksdb:parsed=7 would_break=0
orrandomForest:parsed=7 would_break=0
orsetto:parsed=150 would_break=0
orsvm_e1071:parsed=7 would_break=0
ortac-core:parsed=186 would_break=0
orxgboost:parsed=8 would_break=0
osc:parsed=14 would_break=0
osdp:parsed=45 would_break=0
oseq:parsed=5 would_break=0
oskel:parsed=29 would_break=0
osnap:parsed=17 would_break=0
otf:parsed=1 would_break=0
otfm:parsed=5 would_break=0
otoml:parsed=11 would_break=0
otr:parsed=19 would_break=0
ott:parsed=82 would_break=0
ounit:parsed=56 would_break=0
owee:parsed=35 would_break=0
owi:parsed=138 would_break=0
owl:parsed=374 would_break=0
owl-ode:parsed=29 would_break=0
owl-opt:parsed=35 would_break=0
owl-plplot:parsed=10 would_break=0
owork:parsed=10 would_break=0
ozulip:parsed=10 would_break=0
p4pp:parsed=5 would_break=0
p5scm:parsed=62 would_break=0
pa_ppx:parsed=109 would_break=0
pa_ppx_hashcons:parsed=7 would_break=0
pa_ppx_migrate:parsed=9 would_break=0
pa_ppx_migrate_ocaml_parsetree:parsed=102 would_break=0
pa_ppx_parsetree:parsed=730 would_break=0
pa_ppx_q_ast:parsed=94 would_break=0
pa_ppx_quotation2extension:parsed=2 would_break=0
pa_ppx_regexp:parsed=7 would_break=0
pa_ppx_static:parsed=3 would_break=0
pa_ppx_string:parsed=3 would_break=0
pa_ppx_unique:parsed=3 would_break=0
packstream:parsed=3 would_break=0
pacomb:parsed=63 would_break=0
paf:parsed=24 would_break=0
paf-le:parsed=28 would_break=0
pam:parsed=12 would_break=0
pancake:parsed=0 would_break=0
pandoc:parsed=9 would_break=0
par_incr:parsed=16 would_break=0
parany:parsed=4 would_break=0
pardi:parsed=12 would_break=0
pari:parsed=10 would_break=0
parmap:parsed=18 would_break=0
parse-argv:parsed=3 would_break=0
parsexp:parsed=97 would_break=0
parsexp_io:parsed=4 would_break=0
parsite:parsed=5 would_break=0
parsley:parsed=4 would_break=0
passage:parsed=17 would_break=0
patch:parsed=9 would_break=0
patdiff:parsed=101 would_break=0
path_glob:parsed=8 would_break=0
patience_diff:parsed=23 would_break=0
patricia-tree:parsed=13 would_break=0
pb:parsed=10 would_break=0
pbkdf:parsed=3 would_break=0
pcap-format:parsed=3 would_break=0
pcre:parsed=10 would_break=0
pcre2:parsed=11 would_break=0
pds:parsed=8 would_break=0
pds-reachability:parsed=0 would_break=0
pecu:parsed=4 would_break=0
petrol:parsed=13 would_break=0
pf-qubes:parsed=3 would_break=0
pg_query:parsed=5 would_break=0
pgocaml:parsed=13 would_break=0
pgx:parsed=48 would_break=0
phantom-algebra:parsed=16 would_break=0
phonetic:parsed=5 would_break=0
phylogenetics:parsed=92 would_break=0
piaf:parsed=75 would_break=0
picasso:parsed=23 would_break=0
picos:parsed=132 would_break=0
piece_rope:parsed=31 would_break=0
pkcs11:parsed=210 would_break=0
pla:parsed=5 would_break=0
plateau:parsed=3 would_break=0
plato:parsed=27 would_break=0
plist-xml:parsed=8 would_break=0
plist-xml-lwt:parsed=8 would_break=0
plotly:parsed=14 would_break=0
plplot:parsed=5 would_break=0
poll:parsed=21 would_break=0
polling_state_rpc:parsed=7 would_break=0
polly:parsed=4 would_break=0
polyglot:parsed=5 would_break=0
polynomial:parsed=8 would_break=0
pomap:parsed=13 would_break=0
popper:parsed=48 would_break=0
portaudio:parsed=4 would_break=0
portaudio_c_bindings:parsed=9 would_break=0
portia:parsed=0 would_break=0
portmidi:parsed=14 would_break=0
posix-base:parsed=72 would_break=0
posixat:parsed=8 would_break=0
postgres_async:parsed=43 would_break=0
postgresql:parsed=14 would_break=0
pp:parsed=3 would_break=0
pp-binary-ints:parsed=25 would_break=0
pp_loc:parsed=8 would_break=0
pplumbing:parsed=27 would_break=0
pprint:parsed=14 would_break=0
ppx_accessor:parsed=26 would_break=0
ppx_assert:parsed=6 would_break=0
ppx_base:parsed=1 would_break=0
ppx_bench:parsed=8 would_break=0
ppx_bin_prot:parsed=21 would_break=0
ppx_blob:parsed=8 would_break=0
ppx_catch:parsed=2 would_break=0
ppx_cold:parsed=3 would_break=0
ppx_compare:parsed=8 would_break=0
ppx_compose:parsed=4 would_break=0
ppx_const:parsed=3 would_break=0
ppx_conv_func:parsed=2 would_break=0
ppx_counters:parsed=1 would_break=0
ppx_css:parsed=87 would_break=0
ppx_csv_conv:parsed=4 would_break=0
ppx_custom_printf:parsed=6 would_break=0
ppx_default:parsed=5 would_break=0
ppx_defer:parsed=4 would_break=0
ppx_demo:parsed=3 would_break=0
ppx_derive_at_runtime:parsed=22 would_break=0
ppx_derivers:parsed=3 would_break=0
ppx_deriving:parsed=28 would_break=0
ppx_deriving_cad:parsed=6 would_break=0
ppx_deriving_decoders:parsed=9 would_break=0
ppx_deriving_encoding:parsed=3 would_break=0
ppx_deriving_ezjsonm:parsed=19 would_break=0
ppx_deriving_hardcaml:parsed=6 would_break=0
ppx_deriving_hash:parsed=1 would_break=0
ppx_deriving_jsonschema:parsed=6 would_break=0
ppx_deriving_jsoo:parsed=9 would_break=0
ppx_deriving_madcast:parsed=26 would_break=0
ppx_deriving_protobuf:parsed=9 would_break=0
ppx_deriving_qcheck:parsed=47 would_break=0
ppx_deriving_rpc:parsed=64 would_break=0
ppx_deriving_scad:parsed=4 would_break=0
ppx_deriving_variant_string:parsed=9 would_break=0
ppx_deriving_yojson:parsed=6 would_break=0
ppx_diff:parsed=90 would_break=0
ppx_disable_unused_warnings:parsed=4 would_break=0
ppx_distr_guards:parsed=4 would_break=0
ppx_dream_eml:parsed=2 would_break=0
ppx_embed_file:parsed=4 would_break=0
ppx_enumerate:parsed=4 would_break=0
ppx_expect:parsed=112 would_break=0
ppx_expect_nobase:parsed=81 would_break=0
ppx_factory:parsed=30 would_break=0
ppx_fields_conv:parsed=14 would_break=0
ppx_fixed_literal:parsed=2 would_break=0
ppx_fun:myocamlbuild.ml:     flag ["ocaml"; "compile"; "use_ppx_fun"] &
ppx_fun:myocamlbuild.ml:       S[[31;1mA"[39;22m-ppx"; A("./src/ppx_fun.native")];
ppx_fun:myocamlbuild.ml:     (* Pass -predicates to ocamldep *)
ppx_fun:parsed=4 would_break=1
ppx_gen_rec:parsed=4 would_break=0
ppx_getenv:parsed=2 would_break=0
ppx_globalize:parsed=2 would_break=0
ppx_hardcaml:parsed=6 would_break=0
ppx_hash:parsed=21 would_break=0
ppx_here:parsed=6 would_break=0
ppx_ignore_instrumentation:parsed=3 would_break=0
ppx_import:parsed=25 would_break=0
ppx_inline_alcotest:parsed=5 would_break=0
ppx_inline_test:parsed=34 would_break=0
ppx_inline_test_nobase:parsed=15 would_break=0
ppx_interact:parsed=9 would_break=0
ppx_jane:parsed=4 would_break=0
ppx_js_style:parsed=2 would_break=0
ppx_jsobject_conv:parsed=7 would_break=0
ppx_jsonaf_conv:parsed=13 would_break=0
ppx_let:parsed=13 would_break=0
ppx_log:parsed=60 would_break=0
ppx_make:parsed=22 would_break=0
ppx_map:parsed=2 would_break=0
ppx_matches:parsed=4 would_break=0
ppx_mica:parsed=49 would_break=0
ppx_minidebug:parsed=35 would_break=0
ppx_module_timer:parsed=4 would_break=0
ppx_monad:parsed=45 would_break=0
ppx_monoid:parsed=2 would_break=0
ppx_mysql:parsed=17 would_break=0
ppx_optcomp:parsed=10 would_break=0
ppx_optint:parsed=1 would_break=0
ppx_optional:parsed=2 would_break=0
ppx_parser:parsed=14 would_break=0
ppx_partial:parsed=3 would_break=0
ppx_pattern_bind:parsed=4 would_break=0
ppx_pipebang:parsed=3 would_break=0
ppx_protocol_conv:parsed=62 would_break=0
ppx_pyformat:parsed=20 would_break=0
ppx_python:parsed=8 would_break=0
ppx_quick_test:parsed=26 would_break=0
ppx_rapper:parsed=16 would_break=0
ppx_regexp:parsed=10 would_break=0
ppx_repr:parsed=104 would_break=0
ppx_seq:parsed=3 would_break=0
ppx_sexp_conv:parsed=70 would_break=0
ppx_sexp_message:parsed=6 would_break=0
ppx_sexp_value:parsed=6 would_break=0
ppx_show:parsed=6 would_break=0
ppx_stable:parsed=24 would_break=0
ppx_stable_witness:parsed=6 would_break=0
ppx_string:parsed=6 would_break=0
ppx_string_conv:parsed=2 would_break=0
ppx_string_interpolation:parsed=5 would_break=0
ppx_subliner:parsed=28 would_break=0
ppx_system:parsed=7 would_break=0
ppx_test:parsed=12 would_break=0
ppx_trace:parsed=53 would_break=0
ppx_ts:parsed=17 would_break=0
ppx_tydi:parsed=3 would_break=0
ppx_typed_fields:parsed=49 would_break=0
ppx_typerep_conv:parsed=2 would_break=0
ppx_units:parsed=6 would_break=0
ppx_update:parsed=3 would_break=0
ppx_variants_conv:parsed=4 would_break=0
ppx_viewpattern:parsed=14 would_break=0
ppx_xml_conv:parsed=2 would_break=0
ppx_yojson:parsed=39 would_break=0
ppx_yojson_conv:parsed=11 would_break=0
ppx_yojson_conv_lib:parsed=5 would_break=0
ppxlib:parsed=248 would_break=0
ppxlib-tools:parsed=252 would_break=0
ppxlib_jane:parsed=15 would_break=0
ppxx:parsed=7 would_break=0
pratter:parsed=5 would_break=0
prbnmcn-basic-structures:parsed=25 would_break=0
prbnmcn-cgrph:parsed=7 would_break=0
prbnmcn-clustering:parsed=12 would_break=0
prbnmcn-dagger:parsed=42 would_break=0
prbnmcn-gnuplot:parsed=4 would_break=0
prbnmcn-linalg:parsed=10 would_break=0
prbnmcn-mcts:parsed=8 would_break=0
prbnmcn-proptest:parsed=4 would_break=0
prbnmcn-stats:parsed=36 would_break=0
prbnmcn-ucb1:parsed=3 would_break=0
prc:parsed=4 would_break=0
preface:parsed=522 would_break=0
prelude:parsed=1 would_break=0
pretty_expressive:parsed=8 would_break=0
prettym:parsed=9 would_break=0
primes:parsed=2 would_break=0
pringo:parsed=6 would_break=0
printbox:parsed=25 would_break=0
proc-smaps:parsed=3 would_break=0
process:parsed=10 would_break=0
process_limits:parsed=827 would_break=0
processor:parsed=20 would_break=0
producer:parsed=3 would_break=0
profiling:parsed=829 would_break=0
profunctor:parsed=3 would_break=0
progress:parsed=74 would_break=0
prom:parsed=7 would_break=0
prometheus:parsed=9 would_break=0
prometheus-liquidsoap:parsed=524 would_break=0
promise:parsed=0 would_break=0
promise_jsoo:parsed=8 would_break=0
prooftree:parsed=19 would_break=0
protocell:parsed=32 would_break=0
protocol-9p:parsed=35 would_break=0
protocol_version_header:parsed=17 would_break=0
proverif:parsed=98 would_break=0
proverifdoc:parsed=0 would_break=0
provider:parsed=54 would_break=0
prr:parsed=9 would_break=0
psmt2-frontend:parsed=14 would_break=0
psq:parsed=5 would_break=0
psyche:parsed=13 would_break=0
ptime:parsed=20 would_break=0
ptmap:parsed=3 would_break=0
ptset:parsed=3 would_break=0
pulseaudio:parsed=6 would_break=0
pure-splitmix:parsed=3 would_break=0
pvec:parsed=4 would_break=0
pvem:parsed=3 would_break=0
py:parsed=11 would_break=0
pyml:parsed=0 would_break=0
pyml_bindgen:parsed=63 would_break=0
pyre-ast:parsed=10 would_break=0
qbf:parsed=13 would_break=0
qcheck-lin:parsed=119 would_break=0
qcstm:parsed=10 would_break=0
qinap:parsed=2 would_break=0
qiskit:parsed=5 would_break=0
qmp:parsed=9 would_break=0
qrc:parsed=12 would_break=0
qrencode:parsed=4 would_break=0
qtest:parsed=8 would_break=0
queenshead:parsed=9 would_break=0
quests:parsed=18 would_break=0
quick_print:parsed=2 would_break=0
quickjs:parsed=6 would_break=0
r2pipe:parsed=0 would_break=0
radamsa:parsed=2 would_break=0
radare2:parsed=2 would_break=0
randii:parsed=20 would_break=0
random:parsed=2 would_break=0
randomconv:parsed=2 would_break=0
randoml:parsed=4 would_break=0
range:parsed=4 would_break=0
rangeSet:parsed=8 would_break=0
rankers:parsed=14 would_break=0
rawlink:parsed=11 would_break=0
raygui:parsed=13 would_break=0
raylib:parsed=25 would_break=0
rdbg:parsed=57 would_break=0
rdf:parsed=169 would_break=0
re:parsed=65 would_break=0
re2:parsed=14 would_break=0
re_parser:parsed=3 would_break=0
rea:parsed=22 would_break=0
react:parsed=11 would_break=0
reactiveData:parsed=2 would_break=0
reactjs-jsx-ppx:parsed=1727 would_break=0
readline:parsed=3 would_break=0
reanalyze:parsed=97 would_break=0
reason:parsed=212 would_break=0
reason-react:parsed=2 would_break=0
record_builder:parsed=6 would_break=0
records:parsed=4 would_break=0
red-black-tree:parsed=4 would_break=0
redirect:parsed=2 would_break=0
redis:parsed=26 would_break=0
redis-async:parsed=41 would_break=0
reedsolomon:parsed=14 would_break=0
regex_parser_intf:parsed=1 would_break=0
remu_ts:parsed=0 would_break=0
reparse:parsed=14 would_break=0
reparse-unix:parsed=17 would_break=0
res:parsed=13 would_break=0
resource-pooling:parsed=5 would_break=0
resource_cache:parsed=23 would_break=0
resp:parsed=18 would_break=0
resto:parsed=27 would_break=0
result:parsed=4 would_break=0
revops:parsed=10 would_break=0
rfc6287:parsed=5 would_break=0
rfsm:parsed=148 would_break=0
rhythm:parsed=0 would_break=0
riot:parsed=115 would_break=0
river:parsed=9 would_break=0
rocq-stdlib:parsed=2 would_break=0
roman:parsed=3 would_break=0
root1d:parsed=6 would_break=0
rope:parsed=8 would_break=0
rosa:parsed=7 would_break=0
rosetta:parsed=2 would_break=0
routes:parsed=7 would_break=0
rpc_parallel:parsed=104 would_break=0
rpmfile:parsed=24 would_break=0
rpmfile-cli:parsed=22 would_break=0
rresult:parsed=7 would_break=0
rss:parsed=7 would_break=0
rtree:parsed=10 would_break=0
rungen:parsed=1 would_break=0
runtime_events_tools:parsed=5 would_break=0
rusage:parsed=1 would_break=0
safa:parsed=28 would_break=0
safemoney:parsed=19 would_break=0
safepass:parsed=2 would_break=0
salsa20:parsed=3 would_break=0
salsa20-core:parsed=3 would_break=0
samplerate:parsed=4 would_break=0
sanddb:parsed=11 would_break=0
sarif:parsed=9 would_break=0
satex:parsed=4 would_break=0
sattools:myocamlbuild.ml:    (* debugging *)
sattools:myocamlbuild.ml:    flag ["ocaml_verbose"; "ocaml"; "compile"] @@ S[[31;1mA"[39;22m-verbose"];
sattools:myocamlbuild.ml:    flag ["ocaml_versboe"; "ocaml"; "link"] @@ S[[31;1mA"[39;22m-verbose"];
sattools:---
sattools:myocamlbuild.ml:      (fun env _ ->
sattools:myocamlbuild.ml:        Cmd (S [ [31;1mA"[39;22mg++"; [31;1mA"[39;22m-c"; [31;1mA"[39;22m-shared"; [31;1mA"[39;22m-fPIC"; 
sattools:myocamlbuild.ml:                 A(env "%.cc"); [31;1mA"[39;22m-o"; A(env "%.o") ]));
sattools:---
sattools:myocamlbuild.ml:    (* compile C file *)
sattools:myocamlbuild.ml:    flag ["c"; "compile"; "use_minisat"] @@ S([ [31;1mA"[39;22m-ccopt"; [31;1mA"[39;22m-shared"; ] @ ctypes_inc); 
sattools:myocamlbuild.ml:    flag ["c"; "compile"; "use_picosat"] @@ S([ [31;1mA"[39;22m-ccopt"; [31;1mA"[39;22m-shared"; ] @ ctypes_inc); 
sattools:myocamlbuild.ml:    flag ["c"; "compile"; "use_cryptominisat"] @@ S([ [31;1mA"[39;22m-ccopt"; [31;1mA"[39;22m-shared"; ] @ ctypes_inc); 
sattools:---
sattools:myocamlbuild.ml:    (* linking c libs *)
sattools:myocamlbuild.ml:    flag ["c"; "ocamlmklib"; "use_minisat" ] @@ S[ [31;1mA"[39;22m-lminisat"; [31;1mA"[39;22m-linkall" ];
sattools:myocamlbuild.ml:    flag ["c"; "ocamlmklib"; "use_picosat" ] @@ S[ [31;1mA"[39;22m-lpicosat"; [31;1mA"[39;22m-linkall" ];
sattools:myocamlbuild.ml:    flag ["c"; "ocamlmklib"; "use_cryptominisat" ] @@ S[ [31;1mA"[39;22m-lcryptominisat4"; [31;1mA"[39;22m-linkall" ];
sattools:---
sattools:myocamlbuild.ml:    (* dynamic linking *)
sattools:myocamlbuild.ml:    flag ["ocaml"; "link"; "native"; "library"; "shared"; "use_minisat"] @@ S[[31;1mA"[39;22m-cclib"; [31;1mA"[39;22m-Lminisat"];
sattools:myocamlbuild.ml:    flag ["ocaml"; "link"; "native"; "library"; "shared"; "use_picosat"] @@ S[[31;1mA"[39;22m-cclib"; [31;1mA"[39;22m-Lpicosat"];
sattools:myocamlbuild.ml:    flag ["ocaml"; "link"; "native"; "library"; "shared"; "use_cryptominisat"] @@ S[[31;1mA"[39;22m-cclib"; [31;1mA"[39;22m-Lcryptominisat"];
sattools:---
sattools:myocamlbuild.ml:    (* byte code linking *)
sattools:myocamlbuild.ml:    flag ["ocaml"; "link"; "byte"; "library"; "use_minisat"] @@ S[[31;1mA"[39;22m-dllib"; [31;1mA"[39;22m-lominisat"];
sattools:myocamlbuild.ml:    flag ["ocaml"; "link"; "byte"; "library"; "use_picosat"] @@ S[[31;1mA"[39;22m-dllib"; [31;1mA"[39;22m-lopicosat"];
sattools:myocamlbuild.ml:    flag ["ocaml"; "link"; "byte"; "library"; "use_cryptominisat"] @@ S[[31;1mA"[39;22m-dllib"; [31;1mA"[39;22m-locryptominisat"];
sattools:parsed=33 would_break=1
saturn:parsed=103 would_break=0
saturn_lockfree:parsed=77 would_break=0
sawja:parsed=104 would_break=0
scad_ml:parsed=25 would_break=0
scfg:parsed=10 would_break=0
scgi:parsed=24 would_break=0
scrypt:parsed=2 would_break=0
scrypt-kdf:parsed=3 would_break=0
search:parsed=7 would_break=0
searchTree:parsed=2 would_break=0
secp256k1-internal:parsed=9 would_break=0
sedlex:parsed=24 would_break=0
sek:parsed=70 would_break=0
sel:parsed=8 would_break=0
semantic_version:parsed=5 would_break=0
semaphore-compat:parsed=6 would_break=0
semv:parsed=3 would_break=0
semver:parsed=3 would_break=0
semver2:parsed=3 would_break=0
sendmsg:parsed=9 would_break=0
seqes:parsed=29 would_break=0
sequence:parsed=5 would_break=0
sequencer_table:parsed=3 would_break=0
serde:parsed=14 would_break=0
serde_debug:parsed=41 would_break=0
serial:parsed=11 would_break=0
server-reason-react:parsed=113 would_break=0
session:parsed=29 would_break=0
setcore:parsed=1 would_break=0
sexp:parsed=107 would_break=0
sexp_decode:parsed=2 would_break=0
sexp_diff:parsed=9 would_break=0
sexp_grammar:parsed=28 would_break=0
sexp_macro:parsed=11 would_break=0
sexp_pretty:parsed=10 would_break=0
sexp_select:parsed=15 would_break=0
sexp_string_quickcheck:parsed=8 would_break=0
sexplib:parsed=50 would_break=0
sexplib0:parsed=19 would_break=0
sfml:parsed=108 would_break=0
sgf:parsed=5 would_break=0
sha:parsed=9 would_break=0
shades:parsed=3 would_break=0
shapefile:parsed=16 would_break=0
shared-block-ring:parsed=9 would_break=0
shared-memory-ring:parsed=14 would_break=0
shared-secret:parsed=6 would_break=0
shell:parsed=23 would_break=0
shexp:parsed=47 would_break=0
shine:parsed=4 would_break=0
shuttle:parsed=52 would_break=0
shuttle_http:parsed=49 would_break=0
sifun:parsed=28 would_break=0
signal:parsed=3 would_break=0
sihl:parsed=128 would_break=0
sihl-contract:parsed=140 would_break=0
sihl-type:parsed=125 would_break=0
simlog:parsed=7 would_break=0
simple-diff:parsed=4 would_break=0
simple63:parsed=2 would_break=0
sitemap:parsed=2 would_break=0
slack:parsed=16 would_break=0
slipshow:parsed=155 would_break=0
slug:parsed=5 would_break=0
smart-print:parsed=3 would_break=0
smaws-clients:parsed=445 would_break=0
smol:parsed=18 would_break=0
smtlib-utils:parsed=6 would_break=0
smtml:parsed=93 would_break=0
smtp:parsed=10 would_break=0
snappy:parsed=3 would_break=0
snoke:parsed=3 would_break=0
solidity-common:parsed=36 would_break=0
solo5:parsed=0 would_break=0
solo5-bindings-hvt:parsed=0 would_break=0
solo5-elftool:parsed=4 would_break=0
solo5-kernel-muen:parsed=0 would_break=0
sortedseq_intersect:parsed=2 would_break=0
soundtouch:parsed=4 would_break=0
soupault:parsed=33 would_break=0
spatial-shell:parsed=36 would_break=0
spawn:parsed=9 would_break=0
spdx_licenses:parsed=11 would_break=0
spectrum:parsed=6 would_break=0
speed:parsed=22 would_break=0
spelll:parsed=3 would_break=0
spin:parsed=115 would_break=0
spirv:parsed=4 would_break=0
splay_tree:parsed=6 would_break=0
splittable_random:parsed=4 would_break=0
spoke:parsed=7 would_break=0
spotify-web-api:parsed=5 would_break=0
spotify_ml:parsed=5 would_break=0
sqids:parsed=8 would_break=0
sqlgg:parsed=30 would_break=0
sqlite3:parsed=13 would_break=0
sqlite3_utils:parsed=3 would_break=0
squirrel:parsed=97 would_break=0
srt:parsed=11 would_break=0
ssh-agent:parsed=11 would_break=0
ssl:parsed=17 would_break=0
starpath:parsed=3 would_break=0
starred_ml:parsed=6 would_break=0
stb_image:parsed=2 would_break=0
stb_image_write:parsed=2 would_break=0
stb_truetype:parsed=3 would_break=0
stdcompat:parsed=1147 would_break=0
stdint:parsed=18 would_break=0
stdint-literals:parsed=2 would_break=0
stdio:parsed=6 would_break=0
stdlib-diff:parsed=0 would_break=0
stdlib-random:parsed=17 would_break=0
stdlib-shims:parsed=2 would_break=0
stk:parsed=132 would_break=0
stog:parsed=146 would_break=0
store:parsed=21 would_break=0
stored_reversed:parsed=4 would_break=0
stramon-lib:parsed=36 would_break=0
streamable:parsed=140 would_break=0
streaming:parsed=18 would_break=0
stringCodepointSplitter:parsed=2 would_break=0
string_dict:parsed=6 would_break=0
stringext:parsed=4 would_break=0
strymonas-pure:parsed=41 would_break=0
sturgeon:parsed=18 would_break=0
styled-ppx:parsed=30 would_break=0
subtype-refinement:parsed=3 would_break=0
sun:parsed=1 would_break=0
sundialsml:parsed=272 would_break=0
svmwrap:parsed=4 would_break=0
swapfs:parsed=6 would_break=0
swhid:parsed=11 would_break=0
swhid_compute:parsed=3 would_break=0
swhid_core:parsed=6 would_break=0
swhid_types:parsed=3 would_break=0
swipl:parsed=11 would_break=0
symkat:parsed=16 would_break=0
syncweb:parsed=40 would_break=0
syndic:parsed=25 would_break=0
sys-socket:parsed=19 would_break=0
syslog:parsed=2 would_break=0
syslog-message:parsed=3 would_break=0
syslog-rfc5424:parsed=5 would_break=0
systemverilog:parsed=5 would_break=0
tablecloth-base:parsed=53 would_break=0
tabr:parsed=12 would_break=0
taglib:parsed=6 would_break=0
talaria-bibtex:parsed=7 would_break=0
tar:parsed=17 would_break=0
tcalc:parsed=5 would_break=0
tcpip:parsed=103 would_break=0
tcx:parsed=5 would_break=0
tdigest:parsed=7 would_break=0
telemetry:parsed=4 would_break=0
telltime:parsed=6 would_break=0
tensorboard:parsed=46 would_break=0
term-indexing:parsed=25 would_break=0
term-tools:parsed=21 would_break=0
terminal_size:parsed=3 would_break=0
terml:parsed=23 would_break=0
testo:parsed=64 would_break=0
testu01:parsed=14 would_break=0
textmate-language:parsed=11 would_break=0
textrazor:parsed=25 would_break=0
textutils:parsed=25 would_break=0
textutils_kernel:parsed=9 would_break=0
textwrap:parsed=3 would_break=0
tezos-base58:parsed=2 would_break=0
tezos-bls12-381-polynomial:parsed=70 would_break=0
tezos-clic:parsed=9563 would_break=0
tezos-context-hash:parsed=11 would_break=0
tezos-hacl-glue:parsed=5026 would_break=0
tezos-rust-libs:parsed=0 would_break=0
tezos-sapling-parameters:parsed=0 would_break=0
tezt:parsed=54 would_break=0
thread-local-storage:parsed=6 would_break=0
thread-table:parsed=5 would_break=0
tidy_email:parsed=15 would_break=0
tilde_f:parsed=2 would_break=0
time_now:parsed=2 would_break=0
timed:parsed=10 would_break=0
timedesc:parsed=111 would_break=0
timere:parsed=111 would_break=0
timezone:parsed=5 would_break=0
timmy:parsed=61 would_break=0
tiny_httpd:parsed=69 would_break=0
tip-parser:parsed=5 would_break=0
tjr_simple_earley:parsed=21 would_break=0
tldr:parsed=6 would_break=0
tls:parsed=80 would_break=0
toc:parsed=6 would_break=0
tofn:parsed=2 would_break=0
togglelog:parsed=8 would_break=0
toml:parsed=22 would_break=0
tophide:parsed=1 would_break=0
topiary:parsed=51 would_break=0
topkg:parsed=99 would_break=0
topkg-care:parsed=99 would_break=0
toplevel_backend:parsed=2 would_break=0
toplevel_expect_test:parsed=7 would_break=0
topojson:parsed=7 would_break=0
topological_sort:parsed=7 would_break=0
torch:parsed=162 would_break=0
tplib:myocamlbuild.ml:      (Ocamlbuild_pack.Ocaml_compiler.native_link "%.cmx" "%.obj.o");
tplib:myocamlbuild.ml:    flag ["link";"shared"] & [31;1mA"[39;22m-linkpkg";
tplib:myocamlbuild.ml:    ocaml_lib "src/tplib"
tplib:parsed=53 would_break=1
tqdm:parsed=11 would_break=0
tracing:parsed=31 would_break=0
tracy-client:parsed=5 would_break=0
trail:parsed=24 would_break=0
traits:parsed=12 would_break=0
trampoline:parsed=3 would_break=0
transept:parsed=46 would_break=0
travesty:parsed=68 would_break=0
trax:parsed=4 would_break=0
tree_layout:parsed=15 would_break=0
trexio:parsed=3 would_break=0
trie:parsed=2 would_break=0
trs:parsed=4 would_break=0
tsdl:parsed=16 would_break=0
tsdl-image:parsed=5 would_break=0
tsdl-mixer:parsed=4 would_break=0
tsdl-ttf:parsed=5 would_break=0
tsort:parsed=4 would_break=0
ttweetnacl:parsed=6 would_break=0
tty:parsed=9 would_break=0
tuareg:parsed=0 would_break=0
tube:parsed=2 would_break=0
tuntap:parsed=9 would_break=0
twirp_cohttp_lwt_unix:parsed=16 would_break=0
twostep:parsed=10 would_break=0
tyabt:parsed=4 would_break=0
type_eq:parsed=3 would_break=0
type_id:parsed=3 would_break=0
typeid:parsed=10 would_break=0
typerep:parsed=19 would_break=0
typeset:parsed=8 would_break=0
tyre:parsed=9 would_break=0
tyxml:parsed=56 would_break=0
u2f:parsed=5 would_break=0
ubase:parsed=6 would_break=0
ubpf:parsed=2 would_break=0
uchar:parsed=8 would_break=0
uecc:parsed=5 would_break=0
uint:parsed=13 would_break=0
ulid:parsed=3 would_break=0
um-abt:parsed=5 would_break=0
unidecode:parsed=6 would_break=0
unionFind:parsed=15 would_break=0
unisim_archisec:parsed=6 would_break=0
unison:parsed=149 would_break=0
universal-portal:parsed=0 would_break=0
unix-dirent:myocamlbuild.ml:      (fun env build ->
unix-dirent:myocamlbuild.ml:         Cmd (S[[31;1mA"[39;22mcc";
unix-dirent:myocamlbuild.ml:                A("-I"); A ctypes_libdir;
unix-dirent:---
unix-dirent:myocamlbuild.ml:                A("-I"); A ocaml_libdir;
unix-dirent:myocamlbuild.ml:                [31;1mA"[39;22m-o";
unix-dirent:myocamlbuild.ml:                A(env "lib_gen/%_types_detect");
unix-dirent:---
unix-dirent:myocamlbuild.ml:         Cmd (S[A(env "lib_gen/%_bindgen.byte");
unix-dirent:myocamlbuild.ml:                [31;1mA"[39;22m--c-file";
unix-dirent:myocamlbuild.ml:                A(env "unix/%_stubs.c");
unix-dirent:myocamlbuild.ml:                [31;1mA"[39;22m--ml-file";
unix-dirent:myocamlbuild.ml:                A(env "unix/%_generated.ml")]));
unix-dirent:---
unix-dirent:myocamlbuild.ml:         Cmd (S[A(env "lib_gen/%_bindgen.byte");
unix-dirent:myocamlbuild.ml:                [31;1mA"[39;22m--lwt-bindings";
unix-dirent:myocamlbuild.ml:                [31;1mA"[39;22m--c-file";
unix-dirent:myocamlbuild.ml:                A(env "lwt/%_lwt_stubs.c");
unix-dirent:myocamlbuild.ml:                [31;1mA"[39;22m--ml-file";
unix-dirent:myocamlbuild.ml:                A(env "lwt/%_lwt_generated.ml")]));
unix-dirent:---
unix-dirent:myocamlbuild.ml:
unix-dirent:myocamlbuild.ml:    flag ["c"; "compile"] & S[[31;1mA"[39;22m-ccopt"; [31;1mA"[39;22m-I/usr/local/include"];
unix-dirent:myocamlbuild.ml:    flag ["c"; "ocamlmklib"] & [31;1mA"[39;22m-L/usr/local/lib";
unix-dirent:myocamlbuild.ml:    flag ["ocaml"; "link"; "native"; "program"] &
unix-dirent:myocamlbuild.ml:      S[[31;1mA"[39;22m-cclib"; [31;1mA"[39;22m-L/usr/local/lib"];
unix-dirent:---
unix-dirent:myocamlbuild.ml:      ["unix/unix_dirent_util.o"; "unix/unix_dirent_util.h"];
unix-dirent:myocamlbuild.ml:    flag ["c"; "compile"; "use_ctypes"] & S[[31;1mA"[39;22m-I"; A ctypes_libdir];
unix-dirent:myocamlbuild.ml:    flag ["c"; "compile"; "use_lwt"] & S[[31;1mA"[39;22m-I"; A lwt_libdir];
unix-dirent:myocamlbuild.ml:    flag ["c"; "compile"; "debug"] & [31;1mA"[39;22m-g";
unix-dirent:---
unix-dirent:myocamlbuild.ml:    flag ["ocaml"; "link"; "byte"; "library"; "use_dirent_stubs"] &
unix-dirent:myocamlbuild.ml:      S[[31;1mA"[39;22m-dllib"; [31;1mA"[39;22m-lunix_dirent_stubs"];
unix-dirent:---
unix-dirent:myocamlbuild.ml:    flag ["ocaml"; "link"; "native"; "library"; "use_dirent_stubs"] &
unix-dirent:myocamlbuild.ml:      S[[31;1mA"[39;22m-cclib"; [31;1mA"[39;22m-lunix_dirent_stubs"];
unix-dirent:---
unix-dirent:myocamlbuild.ml:    flag ["ocaml"; "link"; "byte"; "library"; "use_dirent_lwt_stubs"] &
unix-dirent:myocamlbuild.ml:      S[[31;1mA"[39;22m-dllib"; [31;1mA"[39;22m-lunix_dirent_lwt_stubs"];
unix-dirent:myocamlbuild.ml:    flag ["ocaml"; "link"; "native"; "library"; "use_dirent_lwt_stubs"] &
unix-dirent:myocamlbuild.ml:      S[[31;1mA"[39;22m-cclib"; [31;1mA"[39;22m-lunix_dirent_lwt_stubs"];
unix-dirent:---
unix-dirent:myocamlbuild.ml:    flag ["ocaml"; "link"; "byte"; "program"; "use_dirent_stubs"] &
unix-dirent:myocamlbuild.ml:      S[[31;1mA"[39;22m-dllib"; [31;1mA"[39;22m-lunix_dirent_stubs"];
unix-dirent:myocamlbuild.ml:    dep ["ocaml"; "link"; "native"; "program"; "use_dirent_stubs"]
unix-dirent:---
unix-dirent:myocamlbuild.ml:    flag ["ocaml"; "link"; "byte"; "program"; "use_dirent_lwt_stubs"] &
unix-dirent:myocamlbuild.ml:      S[[31;1mA"[39;22m-dllib"; [31;1mA"[39;22m-lunix_lwt_dirent_stubs"];
unix-dirent:myocamlbuild.ml:    dep ["ocaml"; "link"; "native"; "program"; "use_dirent_lwt_stubs"]
unix-dirent:parsed=13 would_break=1
unix-errno:parsed=14 would_break=0
unix-unistd:parsed=11 would_break=0
unstrctrd:parsed=8 would_break=0
uopt:parsed=4 would_break=0
uri:parsed=16 would_break=0
uring:parsed=20 would_break=0
uring-trace:parsed=13 would_break=0
uritemplate:parsed=16 would_break=0
urn:parsed=4 would_break=0
user-agent-parser:parsed=4 would_break=0
user-setup:parsed=16 would_break=0
username_kernel:parsed=3 would_break=0
uspf:parsed=13 would_break=0
utop:parsed=21 would_break=0
uucd:parsed=6 would_break=0
uucp:parsed=106 would_break=0
uuidm:parsed=8 would_break=0
uunf:parsed=17 would_break=0
uuseg:parsed=21 would_break=0
uutf:parsed=7 would_break=0
uuuu:parsed=5 would_break=0
validate:parsed=28 would_break=0
validator:parsed=3 would_break=0
variantslib:parsed=1 would_break=0
varray:parsed=10 would_break=0
vcardgen:parsed=2 would_break=0
vchan:parsed=32 would_break=0
vdom:parsed=14 would_break=0
vec:parsed=3 would_break=0
vector:parsed=3 would_break=0
vector3:parsed=2 would_break=0
vendredi:parsed=6 would_break=0
versioned_polling_state_rpc:parsed=3 would_break=0
vg:parsed=48 would_break=0
vhd-format:parsed=22 would_break=0
virtual_dom:parsed=88 would_break=0
visitors:parsed=97 would_break=0
vlt:parsed=93 would_break=0
voaacenc:parsed=2 would_break=0
vocal:parsed=22 would_break=0
voqc:parsed=36 would_break=0
vpt:parsed=4 would_break=0
vscoq-language-server:parsed=46 would_break=0
vue-jsoo:parsed=21 would_break=0
vue-ppx:parsed=3 would_break=0
wall:parsed=23 would_break=0
wasm:parsed=0 would_break=0
wasmer:parsed=7 would_break=0
wasmtime:parsed=26 would_break=0
wayland:parsed=36 would_break=0
waylaunch:parsed=3 would_break=0
wcwidth:parsed=4 would_break=0
webauthn:parsed=5 would_break=0
webbrowser:parsed=7 would_break=0
webidl:parsed=0 would_break=0
webmachine:parsed=16 would_break=0
websocket:parsed=13 would_break=0
websocketml:parsed=11 would_break=0
webtest:parsed=12 would_break=0
why3:parsed=534 would_break=0
why3find:parsed=87 would_break=0
wikitext:parsed=10 would_break=0
win-error:parsed=7 would_break=0
win-eventlog:parsed=7 would_break=0
ws-server:parsed=3 would_break=0
wtf8:parsed=3 would_break=0
wtr:parsed=8 would_break=0
wu-manber-fuzzy-search:parsed=12 would_break=0
x509:parsed=30 would_break=0
xapi-backtrace:parsed=2 would_break=0
xapi-inventory:parsed=1 would_break=0
xapi-rrd:parsed=11 would_break=0
xapi-stdext-date:parsed=24 would_break=0
xcursor:parsed=12 would_break=0
xdg-basedir:parsed=3 would_break=0
xedbindings:parsed=7 would_break=0
xen-evtchn:parsed=5 would_break=0
xen-gnt:parsed=5 would_break=0
xenstore:parsed=33 would_break=0
xenstore_transport:parsed=8 would_break=0
xkbcommon:parsed=5 would_break=0
xlsx2csv:parsed=7 would_break=0
xmelly:parsed=3 would_break=0
xml-light:parsed=14 would_break=0
xmldiff:parsed=5 would_break=0
xmlm:parsed=9 would_break=0
xmlplaylist:parsed=2 would_break=0
xtmpl:parsed=20 would_break=0
yaml:parsed=27 would_break=0
yocaml:parsed=175 would_break=0
yocaml_cmark:parsed=74 would_break=0
yojson:parsed=14 would_break=0
yojson-bench:parsed=35 would_break=0
yosqlite:parsed=3 would_break=0
yurt:parsed=12 would_break=0
yuscii:parsed=3 would_break=0
yuujinchou:parsed=23 would_break=0
z3:parsed=3 would_break=0
z3_tptp:parsed=3 would_break=0
zar:parsed=8 would_break=0
zarith:parsed=19 would_break=0
zarith-xen:parsed=15 would_break=0
zarith_stubs_js:parsed=34 would_break=0
zarr:parsed=51 would_break=0
zdd:parsed=19 would_break=0
zed:parsed=21 would_break=0
zeit:parsed=20 would_break=0
zelus:parsed=140 would_break=0
zenon:parsed=73 would_break=0
zenon_modulo:parsed=111 would_break=0
zipc:parsed=12 would_break=0
zlib:parsed=3 would_break=0
zlist:parsed=3 would_break=0
zmq:parsed=36 would_break=0
zstandard:parsed=6 would_break=0
zstd:parsed=5 would_break=0
zxcvbn:parsed=4 would_break=0
